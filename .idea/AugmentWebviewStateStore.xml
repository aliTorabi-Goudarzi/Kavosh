<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AugmentWebviewStateStore">
    <option name="stateMap">
      <map>
        <entry key="CHAT_STATE" value="{&quot;currentConversationId&quot;:&quot;efc81eeb-8ac0-4268-b84c-0a55ac643b40&quot;,&quot;conversations&quot;:{&quot;9162b133-d7a4-40e6-b492-d3b874402d22&quot;:{&quot;id&quot;:&quot;9162b133-d7a4-40e6-b492-d3b874402d22&quot;,&quot;createdAtIso&quot;:&quot;2025-07-02T11:25:55.315Z&quot;,&quot;lastInteractedAtIso&quot;:&quot;2025-07-02T11:25:55.315Z&quot;,&quot;chatHistory&quot;:[],&quot;feedbackStates&quot;:{},&quot;toolUseStates&quot;:{},&quot;draftExchange&quot;:{&quot;request_message&quot;:&quot;&quot;,&quot;rich_text_json_repr&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;}]},&quot;mentioned_items&quot;:[],&quot;status&quot;:&quot;draft&quot;},&quot;requestIds&quot;:[],&quot;isPinned&quot;:false,&quot;isShareable&quot;:false,&quot;extraData&quot;:{&quot;hasDirtyEdits&quot;:false},&quot;personaType&quot;:0},&quot;efc81eeb-8ac0-4268-b84c-0a55ac643b40&quot;:{&quot;id&quot;:&quot;efc81eeb-8ac0-4268-b84c-0a55ac643b40&quot;,&quot;name&quot;:&quot;Welcome to the Augment Agent&quot;,&quot;createdAtIso&quot;:&quot;2025-07-02T11:25:55.644Z&quot;,&quot;lastInteractedAtIso&quot;:&quot;2025-07-03T07:00:57.001Z&quot;,&quot;chatHistory&quot;:[{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;d3bff745-319a-4ae1-8b6b-a19f831f1bf2&quot;,&quot;request_message&quot;:&quot;سلام ایا متونی فارسی متوجه بشی ؟&quot;,&quot;rich_text_json_repr&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;سلام ایا متونی فارسی متوجه بشی ؟&quot;}]}]},&quot;mentioned_items&quot;:[],&quot;structured_output_nodes&quot;:[{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;سلام! بله، من کاملاً فارسی را متوجه می‌شوم و می‌توانم به زبان فارسی پاسخ دهم. \n\nمن Augment Agent هستم - یک دستیار هوش مصنوعی برای کدنویسی که توسط Augment Code توسعه داده شده‌ام. می‌توانم به شما در کار با کدبیس Android پروژه‌تان کمک کنم.\n\nمی‌بینم که فایل `MainActivity.kt` را باز کرده‌اید. چه کاری می‌توانم برایتان انجام دهم؟ آیا نیاز به کمک در زمینه‌ای خاص دارید؟\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:0,&quot;type&quot;:0,&quot;text_node&quot;:{&quot;content&quot;:&quot;سلام ایا متونی فارسی متوجه بشی ؟&quot;}},{&quot;id&quot;:1,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-02T11:27:06.127Z&quot;,&quot;response_text&quot;:&quot;سلام! بله، من کاملاً فارسی را متوجه می‌شوم و می‌توانم به زبان فارسی پاسخ دهم. \n\nمن Augment Agent هستم - یک دستیار هوش مصنوعی برای کدنویسی که توسط Augment Code توسعه داده شده‌ام. می‌توانم به شما در کار با کدبیس Android پروژه‌تان کمک کنم.\n\nمی‌بینم که فایل `MainActivity.kt` را باز کرده‌اید. چه کاری می‌توانم برایتان انجام دهم؟ آیا نیاز به کمک در زمینه‌ای خاص دارید؟\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;7e64ed11-752d-4d06-a45a-3d253d14b4e6&quot;,&quot;request_message&quot;:&quot;خب اولش ازت میخوام کاملا فایل های این پروژه یعنی Kavosh رو بررسی کنی چون میخوام درک درست و عمیقی از پروژه داشته باشی قبل از اینکه کاری بخوایم بکنیم&quot;,&quot;rich_text_json_repr&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;خب اولش ازت میخوام کاملا فایل های این پروژه یعنی Kavosh رو بررسی کنی چون میخوام درک درست و عمیقی از پروژه داشته باشی قبل از اینکه کاری بخوایم بکنیم&quot;}]}]},&quot;mentioned_items&quot;:[],&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01VoCHBhHxiezmRQzeqAGxnD&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;.\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;باشه، حتماً! بیایید ابتدا یک بررسی کامل از پروژه Kavosh انجام دهم تا درک عمیقی از ساختار و عملکرد آن پیدا کنم.\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:0,&quot;type&quot;:0,&quot;text_node&quot;:{&quot;content&quot;:&quot;خب اولش ازت میخوام کاملا فایل های این پروژه یعنی Kavosh رو بررسی کنی چون میخوام درک درست و عمیقی از پروژه داشته باشی قبل از اینکه کاری بخوایم بکنیم&quot;}},{&quot;id&quot;:1,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:51:12.282Z&quot;,&quot;response_text&quot;:&quot;باشه، حتماً! بیایید ابتدا یک بررسی کامل از پروژه Kavosh انجام دهم تا درک عمیقی از ساختار و عملکرد آن پیدا کنم.\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;b8b96170-8fc2-4787-bf5d-9ac028d66b9b&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01CWGrPTHQGX9mVcrDCA6Ge9&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;حالا بیایید فایل‌های اصلی پروژه را بررسی کنم:\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in ., excluding hidden items:\n./CHANGELOG.md\n./GEMINI.md\n./app\n./app\\build\n./app\\build.gradle.kts\n./app\\proguard-rules.pro\n./app\\release\n./app\\sampledata\n./app\\src\n./build\n./build.gradle.kts\n./build\\reports\n./gradle\n./gradle.properties\n./gradle\\libs.versions.toml\n./gradle\\wrapper\n./gradlew\n./gradlew.bat\n./local.properties\n./settings.gradle.kts\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01VoCHBhHxiezmRQzeqAGxnD&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:51:20.584Z&quot;,&quot;response_text&quot;:&quot;حالا بیایید فایل‌های اصلی پروژه را بررسی کنم:\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;69f8f723-4bf5-42a2-a464-c14b7197c340&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01AJzZDDf2Z5cZtjPy63P5Bc&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/java\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src, excluding hidden items:\napp/src/androidTest\napp/src/androidTest\\java\napp/src/main\napp/src/main\\AndroidManifest.xml\napp/src/main\\java\napp/src/main\\res\napp/src/test\napp/src/test\\java\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01CWGrPTHQGX9mVcrDCA6Ge9&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:51:28.519Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;55e4ea96-85c1-41ac-bbf6-4fcc19da1b4d&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_013YUzPJS22YxrQVcwv2Z2H2&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/java/ir/dekot\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java, excluding hidden items:\napp/src/main/java/ir\napp/src/main/java/ir\\dekot\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01AJzZDDf2Z5cZtjPy63P5Bc&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:51:32.451Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;5709c11e-5c2a-4efd-b251-927bdc9e4f3f&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01BNHVQpWT5aySYhGTzSLhZH&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;build.gradle.kts\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;حالا بیایید فایل‌های اصلی را بررسی کنم:\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh\napp/src/main/java/ir/dekot/kavosh\\KavoshApp.kt\napp/src/main/java/ir/dekot/kavosh\\MainActivity.kt\napp/src/main/java/ir/dekot/kavosh\\data\napp/src/main/java/ir/dekot/kavosh\\di\napp/src/main/java/ir/dekot/kavosh\\domain\napp/src/main/java/ir/dekot/kavosh\\ui\napp/src/main/java/ir/dekot/kavosh\\util\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_013YUzPJS22YxrQVcwv2Z2H2&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:51:36.541Z&quot;,&quot;response_text&quot;:&quot;حالا بیایید فایل‌های اصلی را بررسی کنم:\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;e7f2bbdc-839b-498c-a112-9b5d3d4d417e&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_0156jH8QivuKufiE6haUqPCP&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/build.gradle.kts\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on build.gradle.kts:\n     1\t// Top-level build file where you can add configuration options common to all sub-projects/modules.\n     2\tplugins {\n     3\t    alias(libs.plugins.android.application) apply false\n     4\t    alias(libs.plugins.kotlin.android) apply false\n     5\t    alias(libs.plugins.kotlin.compose) apply false\n     6\t    alias(libs.plugins.hilt) apply false // &lt;-- این خط را اضافه کن\n     7\t    alias(libs.plugins.kapt) apply false // &lt;-- این خط را اضافه کن\n     8\t    id(\&quot;org.jetbrains.kotlin.plugin.serialization\&quot;) version \&quot;2.2.0\&quot; apply false // نسخه را با نسخه کاتلین خود هماهنگ کنید\n     9\t}\nTotal lines in file: 9\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01BNHVQpWT5aySYhGTzSLhZH&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:51:42.252Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;cc0b64e5-18d5-437f-bd58-80f3f680fdd9&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01TxpZvTUgJ71MhR4jHXWnVs&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;gradle/libs.versions.toml\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on app/build.gradle.kts:\n     1\tplugins {\n     2\t    alias(libs.plugins.android.application)\n     3\t    alias(libs.plugins.kotlin.android)\n     4\t    alias(libs.plugins.kotlin.compose)\n     5\t    alias(libs.plugins.kapt) // &lt;-- به این شکل صحیح است\n     6\t    alias(libs.plugins.hilt) // &lt;-- به این شکل صحیح است\n     7\t    id(\&quot;org.jetbrains.kotlin.plugin.serialization\&quot;) // &lt;-- این پلاگین را اضافه کنید\n     8\t\n     9\t}\n    10\t\n    11\tandroid {\n    12\t    namespace = \&quot;ir.dekot.kavosh\&quot;\n    13\t    compileSdk = 36\n    14\t\n    15\t    defaultConfig {\n    16\t        applicationId = \&quot;ir.dekot.kavosh\&quot;\n    17\t        minSdk = 28\n    18\t        targetSdk = 35\n    19\t        versionCode = 1\n    20\t        versionName = \&quot;4.4.3beta\&quot;\n    21\t\n    22\t        testInstrumentationRunner = \&quot;androidx.test.runner.AndroidJUnitRunner\&quot;\n    23\t    }\n    24\t\n    25\t    buildTypes {\n    26\t        release {\n    27\t            // فعال‌سازی R8 برای کاهش حجم کد و مبهم‌سازی\n    28\t            isMinifyEnabled = true\n    29\t            // فعال‌سازی حذف منابع استفاده نشده\n    30\t            isShrinkResources = true\n    31\t            proguardFiles(\n    32\t                getDefaultProguardFile(\&quot;proguard-android-optimize.txt\&quot;),\n    33\t                \&quot;proguard-rules.pro\&quot;\n    34\t            )\n    35\t        }\n    36\t        setProperty(\&quot;archivesBaseName\&quot;, \&quot;kavosh-${defaultConfig.versionName}\&quot;)\n    37\t    }\n    38\t    compileOptions {\n    39\t        sourceCompatibility = JavaVersion.VERSION_11\n    40\t        targetCompatibility = JavaVersion.VERSION_11\n    41\t    }\n    42\t    kotlin { // Or tasks.withType&lt;org.jetbrains.kotlin.gradle.tasks.KotlinCompile&gt;()\n    43\t        compilerOptions {\n    44\t            jvmTarget.set(org.jetbrains.kotlin.gradle.dsl.JvmTarget.JVM_11) // Or your specific JVM version\n    45\t            // You can add other Kotlin compiler options here if needed\n    46\t            // e.g., freeCompilerArgs.add(\&quot;-Xopt-in=kotlin.RequiresOptIn\&quot;)\n    47\t        }\n    48\t    }\n    49\t    buildFeatures {\n    50\t        compose = true\n    51\t    }\n    52\t}\n    53\t\n    54\tdependencies {\n    55\t\n    56\t    implementation(libs.androidx.core.ktx)\n    57\t    implementation(libs.androidx.material.icons.extended)\n    58\t    implementation(libs.androidx.lifecycle.runtime.ktx)\n    59\t    implementation(libs.androidx.activity.compose)\n    60\t    implementation(platform(libs.androidx.compose.bom))\n    61\t    implementation(libs.androidx.ui)\n    62\t    implementation(libs.androidx.ui.graphics)\n    63\t    implementation(libs.androidx.ui.tooling.preview)\n    64\t    implementation(libs.androidx.material3)\n    65\t    implementation(libs.kotlinx.serialization.json)\n    66\t//    implementation(libs.androidx.media3.common.ktx)\n    67\t    testImplementation(libs.junit)\n    68\t    androidTestImplementation(libs.androidx.junit)\n    69\t    androidTestImplementation(libs.androidx.espresso.core)\n    70\t    androidTestImplementation(platform(libs.androidx.compose.bom))\n    71\t    androidTestImplementation(libs.androidx.ui.test.junit4)\n    72\t    debugImplementation(libs.androidx.ui.tooling)\n    73\t    debugImplementation(libs.androidx.ui.test.manifest)\n    74\t    implementation(libs.accompanist.permissions)\n    75\t    // Hilt\n    76\t    implementation(libs.hilt.android)\n    77\t    kapt(libs.hilt.compiler)\n    78\t    testImplementation(libs.mockk)\n    79\t    testImplementation(libs.mockk.agent.jvm)\n    80\t    implementation(libs.hilt.navigation.compose)\n    81\t\n    82\t}\nTotal lines in file: 82\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_0156jH8QivuKufiE6haUqPCP&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:51:51.599Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;3d9c056f-7d43-4f74-b211-77267e5ccbff&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01PrtHFWySqAYB9Acaf3RLGT&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/java/ir/dekot/kavosh/KavoshApp.kt\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;حالا بیایید فایل‌های اصلی کد را بررسی کنم:\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on gradle/libs.versions.toml:\n     1\t[versions]\n     2\taccompanistPermissions = \&quot;0.37.3\&quot;\n     3\tagp = \&quot;8.11.0\&quot;\n     4\tkotlin = \&quot;2.2.0\&quot;\n     5\tcoreKtx = \&quot;1.16.0\&quot;\n     6\tjunit = \&quot;4.13.2\&quot;\n     7\tjunitVersion = \&quot;1.2.1\&quot;\n     8\tespressoCore = \&quot;3.6.1\&quot;\n     9\tkotlinxSerializationJson = \&quot;1.9.0\&quot;\n    10\tlifecycleRuntimeKtx = \&quot;2.9.1\&quot;\n    11\tactivityCompose = \&quot;1.10.1\&quot;\n    12\tcomposeBom = \&quot;2025.06.01\&quot;\n    13\t#media3CommonKtx = \&quot;1.7.1\&quot;\n    14\thilt = \&quot;2.56.2\&quot; # &lt;-- نسخه Hilt را اضافه کنید\n    15\tmockk = \&quot;1.14.4\&quot;\n    16\tmockkAgentJvm = \&quot;1.14.4\&quot;\n    17\thiltNavigationCompose = \&quot;1.2.0\&quot; # &lt;-- این خط را اضافه کنید\n    18\t\n    19\t\n    20\t[libraries]\n    21\taccompanist-permissions = { module = \&quot;com.google.accompanist:accompanist-permissions\&quot;, version.ref = \&quot;accompanistPermissions\&quot; }\n    22\tandroidx-core-ktx = { group = \&quot;androidx.core\&quot;, name = \&quot;core-ktx\&quot;, version.ref = \&quot;coreKtx\&quot; }\n    23\t# کتابخانه جدید برای جابجایی آیتم‌ها\n    24\tandroidx-material-icons-extended = { module = \&quot;androidx.compose.material:material-icons-extended\&quot; }\n    25\tjunit = { group = \&quot;junit\&quot;, name = \&quot;junit\&quot;, version.ref = \&quot;junit\&quot; }\n    26\tandroidx-junit = { group = \&quot;androidx.test.ext\&quot;, name = \&quot;junit\&quot;, version.ref = \&quot;junitVersion\&quot; }\n    27\tandroidx-espresso-core = { group = \&quot;androidx.test.espresso\&quot;, name = \&quot;espresso-core\&quot;, version.ref = \&quot;espressoCore\&quot; }\n    28\tandroidx-lifecycle-runtime-ktx = { group = \&quot;androidx.lifecycle\&quot;, name = \&quot;lifecycle-runtime-ktx\&quot;, version.ref = \&quot;lifecycleRuntimeKtx\&quot; }\n    29\tandroidx-activity-compose = { group = \&quot;androidx.activity\&quot;, name = \&quot;activity-compose\&quot;, version.ref = \&quot;activityCompose\&quot; }\n    30\tandroidx-compose-bom = { group = \&quot;androidx.compose\&quot;, name = \&quot;compose-bom\&quot;, version.ref = \&quot;composeBom\&quot; }\n    31\tandroidx-ui = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui\&quot; }\n    32\tandroidx-ui-graphics = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui-graphics\&quot; }\n    33\tandroidx-ui-tooling = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui-tooling\&quot; }\n    34\tandroidx-ui-tooling-preview = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui-tooling-preview\&quot; }\n    35\tandroidx-ui-test-manifest = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui-test-manifest\&quot; }\n    36\tandroidx-ui-test-junit4 = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui-test-junit4\&quot; }\n    37\tandroidx-material3 = { group = \&quot;androidx.compose.material3\&quot;, name = \&quot;material3\&quot; }\n    38\t#androidx-media3-common-ktx = { group = \&quot;androidx.media3\&quot;, name = \&quot;media3-common-ktx\&quot;, version.ref = \&quot;media3CommonKtx\&quot; }\n    39\thilt-android = { group = \&quot;com.google.dagger\&quot;, name = \&quot;hilt-android\&quot;, version.ref = \&quot;hilt\&quot; } # &lt;-- اضافه کنید\n    40\thilt-compiler = { group = \&quot;com.google.dagger\&quot;, name = \&quot;hilt-android-compiler\&quot;, version.ref = \&quot;hilt\&quot; } # &lt;-- اضافه کنید\n    41\tkotlinx-serialization-json = { module = \&quot;org.jetbrains.kotlinx:kotlinx-serialization-json\&quot;, version.ref = \&quot;kotlinxSerializationJson\&quot; }\n    42\tmockk-agent-jvm = { module = \&quot;io.mockk:mockk-agent-jvm\&quot;, version.ref = \&quot;mockkAgentJvm\&quot; }\n    43\tmockk = { module = \&quot;io.mockk:mockk\&quot;, version.ref = \&quot;mockk\&quot; }\n    44\thilt-navigation-compose = { group = \&quot;androidx.hilt\&quot;, name = \&quot;hilt-navigation-compose\&quot;, version.ref = \&quot;hiltNavigationCompose\&quot; } # &lt;-- این خط را اضافه کنید\n    45\t\n    46\t\n    47\t[plugins]\n    48\tandroid-application = { id = \&quot;com.android.application\&quot;, version.ref = \&quot;agp\&quot; }\n    49\tkotlin-android = { id = \&quot;org.jetbrains.kotlin.android\&quot;, version.ref = \&quot;kotlin\&quot; }\n    50\tkotlin-compose = { id = \&quot;org.jetbrains.kotlin.plugin.compose\&quot;, version.ref = \&quot;kotlin\&quot; }\n    51\thilt = { id = \&quot;com.google.dagger.hilt.android\&quot;, version.ref = \&quot;hilt\&quot; } # &lt;-- اضافه کنید\n    52\tkapt = { id = \&quot;org.jetbrains.kotlin.kapt\&quot;, version.ref = \&quot;kotlin\&quot; } # &lt;-- این خط را به این شکل اصلاح کن\n    53\t\n    54\t\n    55\t\nTotal lines in file: 55\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01TxpZvTUgJ71MhR4jHXWnVs&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:52:00.749Z&quot;,&quot;response_text&quot;:&quot;حالا بیایید فایل‌های اصلی کد را بررسی کنم:\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;4a0416d7-9b5a-43ce-95b7-ff242f3e127a&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_014zmHiY7PAFWQ6eP9VCztCK&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/java/ir/dekot/kavosh/MainActivity.kt\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on app/src/main/java/ir/dekot/kavosh/KavoshApp.kt:\n     1\tpackage ir.dekot.kavosh\n     2\t\n     3\timport android.app.Application\n     4\timport dagger.hilt.android.HiltAndroidApp\n     5\t\n     6\t/**\n     7\t * کلاس Application سفارشی برای راه‌اندازی Hilt.\n     8\t * انوتیشن @HiltAndroidApp باعث می‌شود Hilt کدهای مورد نیاز\n     9\t * برای تزریق وابستگی در سطح اپلیکیشن را تولید کند.\n    10\t */\n    11\t@HiltAndroidApp\n    12\tclass KavoshApp : Application() {\n    13\t    // در حال حاضر نیازی به کد اضافی در این کلاس نیست.\n    14\t}\nTotal lines in file: 14\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01PrtHFWySqAYB9Acaf3RLGT&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:52:08.681Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;a6dd9dc1-33ea-49f1-b533-a0372e62667d&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_017uTUfgNombrE9N8ZHvy6ug&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/java/ir/dekot/kavosh/data\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;حالا بیایید ساختار پوشه‌های مختلف را بررسی کنم:\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on app/src/main/java/ir/dekot/kavosh/MainActivity.kt:\n     1\tpackage ir.dekot.kavosh\n     2\t\n     3\timport android.content.Context\n     4\timport android.content.res.Configuration\n     5\timport android.os.Build\n     6\timport android.os.Bundle\n     7\timport androidx.activity.ComponentActivity\n     8\timport androidx.activity.compose.setContent\n     9\timport androidx.activity.enableEdgeToEdge\n    10\timport androidx.activity.result.contract.ActivityResultContracts\n    11\timport androidx.activity.viewModels\n    12\timport androidx.annotation.RequiresApi\n    13\timport androidx.compose.foundation.isSystemInDarkTheme\n    14\timport androidx.compose.foundation.layout.fillMaxSize\n    15\timport androidx.compose.material3.MaterialTheme\n    16\timport androidx.compose.material3.Surface\n    17\timport androidx.compose.runtime.CompositionLocalProvider\n    18\timport androidx.compose.runtime.collectAsState\n    19\timport androidx.compose.runtime.getValue\n    20\timport androidx.compose.ui.Modifier\n    21\timport androidx.compose.ui.platform.LocalLayoutDirection\n    22\timport androidx.compose.ui.unit.LayoutDirection\n    23\timport androidx.lifecycle.Lifecycle\n    24\timport androidx.lifecycle.lifecycleScope\n    25\timport androidx.lifecycle.repeatOnLifecycle\n    26\timport dagger.hilt.android.AndroidEntryPoint\n    27\timport ir.dekot.kavosh.data.model.settings.Theme\n    28\timport ir.dekot.kavosh.ui.screen.DeviceInspectorApp\n    29\timport ir.dekot.kavosh.ui.viewmodel.DeviceInfoViewModel\n    30\timport ir.dekot.kavosh.ui.viewmodel.SettingsViewModel // &lt;-- ایمپورت جدید\n    31\timport ir.dekot.kavosh.ui.theme.KavoshTheme // &lt;-- ایمپورت اصلاح شده\n    32\timport ir.dekot.kavosh.ui.viewmodel.DashboardViewModel\n    33\timport ir.dekot.kavosh.ui.viewmodel.ExportViewModel\n    34\timport ir.dekot.kavosh.ui.viewmodel.NavigationViewModel\n    35\timport kotlinx.coroutines.flow.collectLatest\n    36\timport kotlinx.coroutines.launch\n    37\timport java.util.Locale\n    38\t\n    39\t@AndroidEntryPoint\n    40\tclass MainActivity : ComponentActivity() {\n    41\t\n    42\t    private val deviceInfoViewModel: DeviceInfoViewModel by viewModels()\n    43\t    private val settingsViewModel: SettingsViewModel by viewModels()\n    44\t    private val dashboardViewModel: DashboardViewModel by viewModels()\n    45\t    private val exportViewModel: ExportViewModel by viewModels() // &lt;-- اضافه کردن ViewModel جدید\n    46\t    private val navigationViewModel: NavigationViewModel by viewModels() // &lt;-- اضافه کردن ViewModel جدید\n    47\t\n    48\t\n    49\t    @RequiresApi(Build.VERSION_CODES.R)\n    50\t    private val createFileLauncher = registerForActivityResult(\n    51\t        ActivityResultContracts.CreateDocument(\&quot;*/*\&quot;)\n    52\t    ) { uri -&gt;\n    53\t        uri?.let {\n    54\t            val format = exportViewModel.pendingExportFormat\n    55\t            if (format != null) {\n    56\t                // اطلاعات دستگاه را از ViewModel اصلی می‌خوانیم و به ViewModel خروجی پاس می‌دهیم\n    57\t                val currentDeviceInfo = deviceInfoViewModel.deviceInfo.value\n    58\t                exportViewModel.performExport(it, format, currentDeviceInfo)\n    59\t            }\n    60\t        }\n    61\t    }\n    62\t\n    63\t    @RequiresApi(Build.VERSION_CODES.R)\n    64\t    override fun attachBaseContext(newBase: Context) {\n    65\t        // از متد استاتیک ViewModel جدید استفاده می‌کنیم\n    66\t        val lang = SettingsViewModel.getSavedLanguage(newBase)\n    67\t        val locale = Locale(lang)\n    68\t        Locale.setDefault(locale)\n    69\t        val config = Configuration(newBase.resources.configuration)\n    70\t        config.setLocale(locale)\n    71\t        val context = newBase.createConfigurationContext(config)\n    72\t        super.attachBaseContext(context)\n    73\t    }\n    74\t\n    75\t    @RequiresApi(Build.VERSION_CODES.R)\n    76\t    override fun onCreate(savedInstanceState: Bundle?) {\n    77\t        super.onCreate(savedInstanceState)\n    78\t\n    79\t        // به رویدادهای ViewModel جدید گوش می‌دهیم\n    80\t        lifecycleScope.launch {\n    81\t            exportViewModel.exportRequest.collectLatest { format -&gt;\n    82\t                val fileName = \&quot;Kavosh_Report_${System.currentTimeMillis()}.${format.extension}\&quot;\n    83\t                createFileLauncher.launch(fileName)\n    84\t            }\n    85\t        }\n    86\t\n    87\t        lifecycleScope.launch {\n    88\t            // به رویداد تغییر زبان از ViewModel جدید گوش می‌دهیم\n    89\t            settingsViewModel.languageChangeRequest.collectLatest {\n    90\t                recreate()\n    91\t            }\n    92\t        }\n    93\t\n    94\t        lifecycleScope.launch {\n    95\t            lifecycle.repeatOnLifecycle(Lifecycle.State.STARTED) {\n    96\t                deviceInfoViewModel.loadDataForNonFirstLaunch(this@MainActivity)\n    97\t            }\n    98\t        }\n    99\t\n   100\t        enableEdgeToEdge()\n   101\t        setContent {\n   102\t            // زبان و تم را از ViewModel جدید می‌خوانیم\n   103\t            val language by settingsViewModel.language.collectAsState()\n   104\t            val currentTheme by settingsViewModel.themeState.collectAsState() // &lt;-- خواندن تم\n   105\t            val dynamicColor by settingsViewModel.isDynamicThemeEnabled.collectAsState()\n   106\t\n   107\t\n   108\t            val useDarkTheme = when (currentTheme) {\n   109\t                Theme.SYSTEM -&gt; isSystemInDarkTheme()\n   110\t                Theme.LIGHT -&gt; false\n   111\t                Theme.DARK -&gt; true\n   112\t                Theme.AMOLED -&gt; true // تم AMOLED هم تم تاریک محسوب می‌شود\n   113\t            }\n   114\t\n   115\t            val layoutDirection = if (language == \&quot;fa\&quot;) LayoutDirection.Rtl else LayoutDirection.Ltr\n   116\t\n   117\t            CompositionLocalProvider(LocalLayoutDirection provides layoutDirection) {\n   118\t                // تم را اینجا بر اساس داده‌های SettingsViewModel تنظیم می‌کنیم\n   119\t                KavoshTheme(\n   120\t                    darkTheme = useDarkTheme,\n   121\t                    dynamicColor = dynamicColor,\n   122\t                    theme = currentTheme\n   123\t                ) {\n   124\t                    Surface(\n   125\t                        modifier = Modifier.fillMaxSize(),\n   126\t                        color = MaterialTheme.colorScheme.background\n   127\t                    ) {\n   128\t                        DeviceInspectorApp(\n   129\t                            // هر دو ViewModel را به تابع اصلی پاس می‌دهیم\n   130\t                            deviceInfoViewModel = deviceInfoViewModel,\n   131\t                            settingsViewModel = settingsViewModel,\n   132\t                            dashboardViewModel = dashboardViewModel, // &lt;-- پاس دادن ViewModel جدید\n   133\t                            exportViewModel = exportViewModel, // &lt;-- پاس دادن ViewModel جدید\n   134\t                            navigationViewModel = navigationViewModel, // &lt;-- پاس دادن ViewModel جدید\n   135\t                            onStartScan = {\n   136\t                                deviceInfoViewModel.startScan(this) {\n   137\t                                    // بعد از اتمام اسکن، به ViewModel ناوبری اطلاع می‌دهیم\n   138\t                                    navigationViewModel.onScanCompleted()\n   139\t                                }\n   140\t                            }\n   141\t                        )\n   142\t                    }\n   143\t                }\n   144\t            }\n   145\t        }\n   146\t    }\n   147\t}\nTotal lines in file: 147\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_014zmHiY7PAFWQ6eP9VCztCK&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:52:16.530Z&quot;,&quot;response_text&quot;:&quot;حالا بیایید ساختار پوشه‌های مختلف را بررسی کنم:\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;d9c5d840-f9f4-45cd-8c76-77e67c0cf1d1&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01VTsEmP6RpfMXZgVyzmrwkT&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/java/ir/dekot/kavosh/ui\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot/kavosh/data, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh/data/model\napp/src/main/java/ir/dekot/kavosh/data/model\\DeviceInfoModels.kt\napp/src/main/java/ir/dekot/kavosh/data/model\\components\napp/src/main/java/ir/dekot/kavosh/data/model\\settings\napp/src/main/java/ir/dekot/kavosh/data/repository\napp/src/main/java/ir/dekot/kavosh/data/repository\\DeviceInfoRepository.kt\napp/src/main/java/ir/dekot/kavosh/data/source\napp/src/main/java/ir/dekot/kavosh/data/source\\CameraDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\MemoryDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\NetworkDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\NetworkToolsDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\PowerDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\SettingsDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\SimDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\SocDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\SystemDataSource.kt\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_017uTUfgNombrE9N8ZHvy6ug&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:52:25.003Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;f748d11c-001d-44d6-964e-33bb0810de71&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_015uC1naWDeRUseyTDcBgEYw&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/java/ir/dekot/kavosh/di\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot/kavosh/ui, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh/ui/composables\napp/src/main/java/ir/dekot/kavosh/ui/composables\\InfoCard.kt\napp/src/main/java/ir/dekot/kavosh/ui/composables\\InfoRow.kt\napp/src/main/java/ir/dekot/kavosh/ui/composables\\SharedComposables.kt\napp/src/main/java/ir/dekot/kavosh/ui/navigation\napp/src/main/java/ir/dekot/kavosh/ui/navigation\\Screen.kt\napp/src/main/java/ir/dekot/kavosh/ui/screen\napp/src/main/java/ir/dekot/kavosh/ui/screen\\DeviceInspectorScreen.kt\napp/src/main/java/ir/dekot/kavosh/ui/screen\\about\napp/src/main/java/ir/dekot/kavosh/ui/screen\\dashboard\napp/src/main/java/ir/dekot/kavosh/ui/screen\\detail\napp/src/main/java/ir/dekot/kavosh/ui/screen\\displaytest\napp/src/main/java/ir/dekot/kavosh/ui/screen\\networktools\napp/src/main/java/ir/dekot/kavosh/ui/screen\\sensordetail\napp/src/main/java/ir/dekot/kavosh/ui/screen\\settings\napp/src/main/java/ir/dekot/kavosh/ui/screen\\splash\napp/src/main/java/ir/dekot/kavosh/ui/screen\\stresstest\napp/src/main/java/ir/dekot/kavosh/ui/theme\napp/src/main/java/ir/dekot/kavosh/ui/theme\\Color.kt\napp/src/main/java/ir/dekot/kavosh/ui/theme\\Theme.kt\napp/src/main/java/ir/dekot/kavosh/ui/theme\\Type.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\CpuStressTestViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\DashboardViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\DeviceInfoViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\DisplayTestViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\ExportFormat.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\ExportViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\InfoCategory.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\NavigationViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\NetworkToolsViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\SettingsViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\StorageViewModel.kt\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01VTsEmP6RpfMXZgVyzmrwkT&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:52:31.023Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;b289fd4c-7d95-4422-9710-fd67309e161d&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01H2FCi6cKggUqF5Gmfcjx5u&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/java/ir/dekot/kavosh/domain\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot/kavosh/di, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh/di/AppModule.kt\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_015uC1naWDeRUseyTDcBgEYw&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:52:37.086Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;797b32ee-5a03-4213-9255-516753b02319&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01UyBmm86nkR2mVyscRt5vwR&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/java/ir/dekot/kavosh/util\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot/kavosh/domain, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh/domain/CpuStresser.kt\napp/src/main/java/ir/dekot/kavosh/domain/sensor\napp/src/main/java/ir/dekot/kavosh/domain/sensor\\SensorHandler.kt\napp/src/main/java/ir/dekot/kavosh/domain/sensor\\SensorState.kt\napp/src/main/java/ir/dekot/kavosh/domain/test.kt\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01H2FCi6cKggUqF5Gmfcjx5u&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:52:42.290Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;a47bd7b5-bad1-4970-8c78-67c1c26ef5a4&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01XvvANSbfJXaYY7gYSssCLU&quot;,&quot;tool_name&quot;:&quot;codebase-retrieval&quot;,&quot;input_json&quot;:&quot;{\&quot;information_request\&quot;: \&quot;\\u0628\\u0631\\u0631\\u0633\\u06cc \\u06a9\\u0627\\u0645\\u0644 \\u067e\\u0631\\u0648\\u0698\\u0647 Kavosh - \\u0633\\u0627\\u062e\\u062a\\u0627\\u0631 \\u06a9\\u0644\\u06cc\\u060c \\u0645\\u0639\\u0645\\u0627\\u0631\\u06cc\\u060c \\u0648\\u06cc\\u0698\\u06af\\u06cc\\u200c\\u0647\\u0627\\u060c \\u0645\\u062f\\u0644\\u200c\\u0647\\u0627\\u06cc \\u062f\\u0627\\u062f\\u0647\\u060c ViewModel \\u0647\\u0627\\u060c UI screens\\u060c data sources\\u060c \\u0648 \\u0639\\u0645\\u0644\\u06a9\\u0631\\u062f \\u06a9\\u0644\\u06cc \\u0627\\u067e\\u0644\\u06cc\\u06a9\\u06cc\\u0634\\u0646\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;حالا بیایید فایل‌های کلیدی را بررسی کنم:\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot/kavosh/util, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh/util/FormatUtils.kt\napp/src/main/java/ir/dekot/kavosh/util/ImageUtils.kt\napp/src/main/java/ir/dekot/kavosh/util/PermissionUtils.kt\napp/src/main/java/ir/dekot/kavosh/util/ShareUtils.kt\napp/src/main/java/ir/dekot/kavosh/util/report\napp/src/main/java/ir/dekot/kavosh/util/report\\PdfGenerator.kt\napp/src/main/java/ir/dekot/kavosh/util/report\\ReportFormatter.kt\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01UyBmm86nkR2mVyscRt5vwR&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:52:47.678Z&quot;,&quot;response_text&quot;:&quot;حالا بیایید فایل‌های کلیدی را بررسی کنم:\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;69707dd0-fc2a-4500-a839-cf55fa34b5b6&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01GVuvKqzaGMvTGwKycExYoe&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/AndroidManifest.xml\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;حالا بیایید فایل‌های مهم دیگر را بررسی کنم:\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;The following code sections were retrieved:\nPath: GEMINI.md\n     1\t##Project Overview\n     2\tThe \&quot;Kavosh\&quot; project is an open-source Android application designed to display detailed hardware and software information about the user's device. The application allows users to access details about their CPU, GPU, RAM, battery status, sensors, camera, and network. It also provides testing tools such as a storage speed test, CPU stress test, and display test.\n     3\t\n     4\t##Architecture and Technologies:\n     5\t\n     6\t-Architecture: The project follows the MVVM (Model-View-ViewModel) architecture.\n     7\t\n     8\t-User Interface (UI): Built entirely with Jetpack Compose in a declarative style.\n     9\t\n    10\t-Dependency Injection (DI): Uses Hilt to manage dependencies throughout the application.\n...\n    49\t\n    50\tPermission Handling: The accompanist-permissions library is used for requesting permissions. The permission status should be checked, and the appropriate UI (permission request or information display) should be shown to the user.\n    51\t\n    52\t##Key Files\n    53\tHere is a list of important project files and their roles:\n    54\t\n    55\t-MainActivity.kt: The main entry point of the application. It handles initial setup like language, theme, and launching the DeviceInspectorApp. It also manages the file-saving launcher.\n    56\t\n    57\t-di/AppModule.kt: The Hilt module that defines how to provide all project dependencies, especially DataSources and the Repository.\n...\n    74\t\n    75\t-DeviceInfoViewModel.kt: The main ViewModel for holding and managing general device data and live data.\n    76\t\n    77\t-NavigationViewModel.kt: Manages the current navigation state of the app and controls the back stack.\n    78\t\n    79\t-DashboardViewModel.kt: Manages the order and visibility of dashboard items.\n    80\t\n    81\t-SettingsViewModel.kt: Manages application settings like theme and language.\n    82\t\n    83\t-ui/screen/ (Package): Contains all full-screen composables, each constituting a screen in the application.\n    84\t\n    85\t-DashboardScreen.kt: The main screen that displays the different categories.\n    86\t\n    87\t-DetailScreen.kt: The screen for displaying the details of a specific category.\n    88\t\n    89\t-SensorDetailScreen.kt: A dedicated screen for displaying live data from a sensor.\n...\n   105\t\n   106\t-KavoshApp.kt: The Application class, annotated with @HiltAndroidApp to set up Hilt at the application level.\n   107\t\n   108\t-data/model/ (Package): Contains data classes that model the structure of information for different components (e.g., CpuInfo, BatteryInfo, etc.).\n   109\t\n   110\t-domain/sensor/ (Package): Contains the logic for sensor management, including SensorHandler for registering and receiving sensor data, and SensorState for modeling different sensor states.\n   111\t\n   112\t-ui/theme/ (Package): Contains files related to the application's theme in Jetpack Compose.\n   113\t\n   114\t-Theme.kt: Main theme definition, including color palettes for light, dark, and AMOLED modes.\n   115\t\n   116\t-Color.kt: Definition of base colors.\n   117\t\n   118\t-Type.kt: Definition of typography styles.\n...\nPath: app/src/main/java/ir/dekot/kavosh/KavoshApp.kt\n     1\tpackage ir.dekot.kavosh\n     2\t\n     3\timport android.app.Application\n     4\timport dagger.hilt.android.HiltAndroidApp\n     5\t\n     6\t/**\n     7\t * کلاس Application سفارشی برای راه‌اندازی Hilt.\n     8\t * انوتیشن @HiltAndroidApp باعث می‌شود Hilt کدهای مورد نیاز\n     9\t * برای تزریق وابستگی در سطح اپلیکیشن را تولید کند.\n    10\t */\n    11\t@HiltAndroidApp\n    12\tclass KavoshApp : Application() {\n    13\t    // در حال حاضر نیازی به کد اضافی در این کلاس نیست.\n    14\t}...\nPath: app/src/main/java/ir/dekot/kavosh/MainActivity.kt\n...\n    20\timport androidx.compose.ui.Modifier\n    21\timport androidx.compose.ui.platform.LocalLayoutDirection\n    22\timport androidx.compose.ui.unit.LayoutDirection\n    23\timport androidx.lifecycle.Lifecycle\n    24\timport androidx.lifecycle.lifecycleScope\n    25\timport androidx.lifecycle.repeatOnLifecycle\n    26\timport dagger.hilt.android.AndroidEntryPoint\n    27\timport ir.dekot.kavosh.data.model.settings.Theme\n    28\timport ir.dekot.kavosh.ui.screen.DeviceInspectorApp\n    29\timport ir.dekot.kavosh.ui.viewmodel.DeviceInfoViewModel\n    30\timport ir.dekot.kavosh.ui.viewmodel.SettingsViewModel // &lt;-- ایمپورت جدید\n    31\timport ir.dekot.kavosh.ui.theme.KavoshTheme // &lt;-- ایمپورت اصلاح شده\n    32\timport ir.dekot.kavosh.ui.viewmodel.DashboardViewModel\n    33\timport ir.dekot.kavosh.ui.viewmodel.ExportViewModel\n...\n    74\t\n    75\t    @RequiresApi(Build.VERSION_CODES.R)\n    76\t    override fun onCreate(savedInstanceState: Bundle?) {\n    77\t        super.onCreate(savedInstanceState)\n    78\t\n    79\t        // به رویدادهای ViewModel جدید گوش می‌دهیم\n    80\t        lifecycleScope.launch {\n    81\t            exportViewModel.exportRequest.collectLatest { format -&gt;\n    82\t                val fileName = \&quot;Kavosh_Report_${System.currentTimeMillis()}.${format.extension}\&quot;\n    83\t                createFileLauncher.launch(fileName)\n    84\t            }\n    85\t        }\n    86\t\n    87\t        lifecycleScope.launch {\n    88\t            // به رویداد تغییر زبان از ViewModel جدید گوش می‌دهیم\n    89\t            settingsViewModel.languageChangeRequest.collectLatest {\n    90\t                recreate()\n    91\t            }\n    92\t        }\n    93\t\n    94\t        lifecycleScope.launch {\n    95\t            lifecycle.repeatOnLifecycle(Lifecycle.State.STARTED) {\n    96\t                deviceInfoViewModel.loadDataForNonFirstLaunch(this@MainActivity)\n    97\t            }\n    98\t        }\n...\n   116\t\n   117\t            CompositionLocalProvider(LocalLayoutDirection provides layoutDirection) {\n   118\t                // تم را اینجا بر اساس داده‌های SettingsViewModel تنظیم می‌کنیم\n   119\t                KavoshTheme(\n   120\t                    darkTheme = useDarkTheme,\n   121\t                    dynamicColor = dynamicColor,\n   122\t                    theme = currentTheme\n   123\t                ) {\n   124\t                    Surface(\n   125\t                        modifier = Modifier.fillMaxSize(),\n   126\t                        color = MaterialTheme.colorScheme.background\n   127\t                    ) {\n   128\t                        DeviceInspectorApp(\n   129\t                            // هر دو ViewModel را به تابع اصلی پاس می‌دهیم\n   130\t                            deviceInfoViewModel = deviceInfoViewModel,\n   131\t                            settingsViewModel = settingsViewModel,\n   132\t                            dashboardViewModel = dashboardViewModel, // &lt;-- پاس دادن ViewModel جدید\n   133\t                            exportViewModel = exportViewModel, // &lt;-- پاس دادن ViewModel جدید\n   134\t                            navigationViewModel = navigationViewModel, // &lt;-- پاس دادن ViewModel جدید\n   135\t                            onStartScan = {\n   136\t                                deviceInfoViewModel.startScan(this) {\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/screen/DeviceInspectorScreen.kt\n...\n    18\timport ir.dekot.kavosh.ui.screen.sensordetail.SensorDetailScreen\n    19\timport ir.dekot.kavosh.ui.screen.settings.SettingsScreen\n    20\timport ir.dekot.kavosh.ui.screen.splash.SplashScreen\n    21\timport ir.dekot.kavosh.ui.screen.stresstest.CpuStressTestScreen\n    22\timport ir.dekot.kavosh.ui.viewmodel.*\n    23\t\n    24\t@SuppressLint(\&quot;NewApi\&quot;)\n    25\t@RequiresApi(Build.VERSION_CODES.R)\n    26\t@Composable\n    27\tfun DeviceInspectorApp(\n    28\t    deviceInfoViewModel: DeviceInfoViewModel,\n    29\t    settingsViewModel: SettingsViewModel,\n    30\t    dashboardViewModel: DashboardViewModel,\n    31\t    exportViewModel: ExportViewModel,\n    32\t    navigationViewModel: NavigationViewModel,\n    33\t    onStartScan: () -&gt; Unit\n    34\t) {\n    35\t    val currentScreen by navigationViewModel.currentScreen.collectAsState()\n    36\t\n    37\t    // ... (کد LaunchedEffect)\n    38\t\n    39\t    // **اصلاح ۱: حذف BackHandler از اینجا و انتقال به داخل case ها**\n    40\t\n    41\t    when (val screen = currentScreen) {\n    42\t        is Screen.Splash -&gt; SplashScreen(onStartScan = onStartScan, viewModel = deviceInfoViewModel)\n    43\t\n    44\t        is Screen.Dashboard -&gt; DashboardScreen(\n    45\t            settingsViewModel = settingsViewModel,\n    46\t            dashboardViewModel = dashboardViewModel,\n    47\t            exportViewModel = exportViewModel,\n    48\t            onCategoryClick = { category, _ -&gt; navigationViewModel.navigateToDetail(category) },\n    49\t            onSettingsClick = { navigationViewModel.navigateToSettings() },\n    50\t            onEditDashboardClick = { navigationViewModel.navigateToEditDashboard() }\n    51\t        )\n    52\t\n    53\t        is Screen.Settings -&gt; {\n    54\t            BackHandler { navigationViewModel.navigateBack() }\n    55\t            SettingsScreen(\n    56\t                viewModel = settingsViewModel,\n    57\t                onNavigateToAbout = { navigationViewModel.navigateToAbout() },\n    58\t                onBackClick = { navigationViewModel.navigateBack() }\n    59\t            )\n    60\t        }\n...\nPath: app/build.gradle.kts\n...\n    10\t\n    11\tandroid {\n    12\t    namespace = \&quot;ir.dekot.kavosh\&quot;\n    13\t    compileSdk = 36\n    14\t\n    15\t    defaultConfig {\n    16\t        applicationId = \&quot;ir.dekot.kavosh\&quot;\n    17\t        minSdk = 28\n    18\t        targetSdk = 35\n    19\t        versionCode = 1\n    20\t        versionName = \&quot;4.4.3beta\&quot;\n    21\t\n    22\t        testInstrumentationRunner = \&quot;androidx.test.runner.AndroidJUnitRunner\&quot;\n    23\t    }\n    24\t\n    25\t    buildTypes {\n    26\t        release {\n    27\t            // فعال‌سازی R8 برای کاهش حجم کد و مبهم‌سازی\n    28\t            isMinifyEnabled = true\n    29\t            // فعال‌سازی حذف منابع استفاده نشده\n    30\t            isShrinkResources = true\n    31\t            proguardFiles(\n    32\t                getDefaultProguardFile(\&quot;proguard-android-optimize.txt\&quot;),\n    33\t                \&quot;proguard-rules.pro\&quot;\n    34\t            )\n    35\t        }\n    36\t        setProperty(\&quot;archivesBaseName\&quot;, \&quot;kavosh-${defaultConfig.versionName}\&quot;)\n    37\t    }\n    38\t    compileOptions {\n    39\t        sourceCompatibility = JavaVersion.VERSION_11\n    40\t        targetCompatibility = JavaVersion.VERSION_11\n    41\t    }\n...\nPath: app/src/test/java/ir/dekot/kavosh/ExampleUnitTest.kt\n     1\tpackage ir.dekot.kavosh\n     2\t\n     3\timport org.junit.Test\n     4\t\n     5\timport org.junit.Assert.*\n     6\t\n     7\t/**\n     8\t * Example local unit test, which will execute on the development machine (host).\n     9\t *\n    10\t * See [testing documentation](http://d.android.com/tools/testing).\n    11\t */\n    12\tclass ExampleUnitTest {\n    13\t    @Test\n    14\t    fun addition_isCorrect() {\n    15\t        assertEquals(4, 2 + 2)\n    16\t    }\n    17\t}...\nPath: app/src/main/java/ir/dekot/kavosh/ui/viewmodel/DeviceInfoViewModel.kt\n...\n    83\t\n    84\t\n    85\t    init {\n    86\t        // **اصلاح کلیدی در init**\n    87\t        if (repository.isFirstLaunch()) {\n    88\t            hasLoadedData = false\n    89\t        } else {\n    90\t            // اگر اجرای اول نیست، سعی کن از کش بخونی\n    91\t            val cachedInfo = repository.getDeviceInfoCache()\n    92\t            if (cachedInfo != null) {\n    93\t                _deviceInfo.value = cachedInfo\n    94\t                hasLoadedData = true\n    95\t            }\n    96\t        }\n    97\t    }\n    98\t\n    99\t    override fun onCleared() {\n   100\t        super.onCleared()\n   101\t        stopAllPolling()\n   102\t        sensorHandler.stopListening()\n   103\t    }\n   104\t\n   105\t    /**\n   106\t     * این تابع تمام کارهای زمان‌بر (polling) را متوقف می‌کند.\n   107\t     * حالا از بیرون (توسط لایه UI) فراخوانی می‌شود.\n   108\t     */\n   109\t    fun stopAllPolling() {\n   110\t        socPollingJob?.cancel()\n   111\t        socPollingJob = null\n   112\t        networkPollingJob?.cancel()\n   113\t        networkPollingJob = null\n   114\t        unregisterBatteryReceiver()\n   115\t    }\n...\n   130\t\n   131\t    // --- توابع مربوط به اسکن و بارگذاری داده ---\n   132\t\n   133\t    fun loadDataForNonFirstLaunch(activity: Activity) {\n   134\t        // اگر کش داریم، این متد نباید دوباره اسکن کند\n   135\t        if (repository.isFirstLaunch() || hasLoadedData) return\n   136\t\n   137\t        viewModelScope.launch {\n   138\t            _isScanning.value = true\n   139\t            try {\n   140\t                _deviceInfo.value = fetchAllDeviceInfo(activity)\n   141\t                // **اصلاح کلیدی: ذخیره اطلاعات در کش**\n   142\t                repository.saveDeviceInfoCache(_deviceInfo.value)\n   143\t            } catch (e: Exception) {\n   144\t                e.printStackTrace()\n   145\t            } finally {\n   146\t                _isScanning.value = false\n   147\t                hasLoadedData = true\n   148\t            }\n   149\t        }\n   150\t    }\n...\n   161\t\n   162\t        val displayInfo = repository.getDisplayInfo(activity)\n   163\t        val thermalInfo = repository.getThermalInfo()\n   164\t        val networkInfo = repository.getNetworkInfo()\n   165\t\n   166\t        return DeviceInfo(\n   167\t            cpu = cpuInfoJob.await(),\n   168\t            gpu = gpuInfoJob.await(),\n   169\t            ram = ramInfoJob.await(),\n   170\t            storage = storageInfoJob.await(),\n   171\t            system = systemInfoJob.await(),\n   172\t            sensors = sensorInfoJob.await(),\n   173\t            cameras = cameraInfoJob.await(),\n   174\t            simCards = simInfoJob.await(), // &lt;-- افزودن نتیجه به مدل\n   175\t            display = displayInfo,\n   176\t            thermal = thermalInfo,\n   177\t            network = networkInfo\n   178\t        )\n   179\t    }\n   180\t\n   181\t    fun startScan(activity: Activity, onScanComplete: () -&gt; Unit) {\n   182\t        if (_isScanning.value) return\n   183\t\n   184\t        viewModelScope.launch {\n   185\t            _isScanning.value = true\n   186\t            _scanProgress.value = 0f\n   187\t\n   188\t            val animationJob = launch {\n   189\t                launch { for (i in 1..100) { delay(150); _scanProgress.value = i / 100f } }\n   190\t                _scanStatusText.value = \&quot;در حال خواندن مشخصات دستگاه...\&quot;\n   191\t                delay(5000)\n   192\t                _scanStatusText.value = \&quot;دریافت اطلاعات از درایور ها...\&quot;\n   193\t                delay(5000)\n   194\t                _scanStatusText.value = \&quot;ثبت اطلاعات...\&quot;\n   195\t            }\n   196\t\n   197\t            val dataLoadingJob = launch {\n   198\t                _deviceInfo.value = fetchAllDeviceInfo(activity)\n   199\t                // **اصلاح کلیدی: ذخیره اطلاعات در کش پس از اسکن موفق**\n   200\t                repository.saveDeviceInfoCache(_deviceInfo.value)\n   201\t            }\n   202\t\n   203\t            animationJob.join()\n   204\t            dataLoadingJob.join()\n   205\t            repository.setFirstLaunchCompleted()\n   206\t            hasLoadedData = true\n   207\t\n   208\t            onScanComplete() // به لایه ناوبری اطلاع می‌دهیم که اسکن تمام شد\n   209\t            _isScanning.value = false\n   210\t        }\n   211\t    }\n...\nPath: app/src/main/java/ir/dekot/kavosh/data/repository/DeviceInfoRepository.kt\n...\n    50\t\n    51\t    // دو متد زیر را اضافه کنید\n    52\t    fun saveLanguage(language: String) = settingsDataSource.saveLanguage(language)\n    53\t    fun getLanguage(): String = settingsDataSource.getLanguage()\n    54\t    fun isFirstLaunch(): Boolean = settingsDataSource.isFirstLaunch()\n    55\t    fun setFirstLaunchCompleted() = settingsDataSource.setFirstLaunchCompleted()\n    56\t    fun saveTheme(theme: Theme) = settingsDataSource.saveTheme(theme)\n    57\t    fun getTheme(): Theme = settingsDataSource.getTheme()\n    58\t    // متدهای جدید برای داشبورد\n    59\t    fun saveDashboardOrder(categories: List&lt;InfoCategory&gt;) = settingsDataSource.saveDashboardOrder(categories)\n    60\t    fun getDashboardOrder(): List&lt;InfoCategory&gt; = settingsDataSource.getDashboardOrder()\n    61\t    fun saveHiddenCategories(hidden: Set&lt;InfoCategory&gt;) = settingsDataSource.saveHiddenCategories(hidden)\n    62\t    fun getHiddenCategories(): Set&lt;InfoCategory&gt; = settingsDataSource.getHiddenCategories()\n    63\t    // متدهای جدید برای کنترل قابلیت جابجایی\n    64\t    fun setReorderingEnabled(enabled: Boolean) = settingsDataSource.setReorderingEnabled(enabled)\n    65\t    fun isReorderingEnabled(): Boolean = settingsDataSource.isReorderingEnabled()\n    66\t\n    67\t\n    68\t\n    69\t    // --- PowerDataSource ---\n    70\t    fun getThermalInfo(): List&lt;ThermalInfo&gt; = powerDataSource.getThermalInfo()\n    71\t    fun getBatteryInfo(intent: Intent): BatteryInfo = powerDataSource.getBatteryInfo(intent)\n    72\t    fun getInitialBatteryInfo(): BatteryInfo? = powerDataSource.getInitialBatteryInfo()\n    73\t\n    74\t    // --- SocDataSource ---\n    75\t    fun getCpuInfo(): CpuInfo = socDataSource.getCpuInfo()\n    76\t    fun getLiveCpuFrequencies(): List&lt;String&gt; = socDataSource.getLiveCpuFrequencies()\n    77\t    fun getGpuLoadPercentage(): Int? = socDataSource.getGpuLoadPercentage()\n    78\t    suspend fun getGpuInfo(activity: Activity): GpuInfo = socDataSource.getGpuInfo(activity)\n    79\t\n    80\t    // --- SystemDataSource ---\n    81\t    // امضای این دو متد را برای دریافت Activity تغییر می‌دهیم\n    82\t    @RequiresApi(30)\n    83\t    fun getDisplayInfo(activity: Activity): DisplayInfo = systemDataSource.getDisplayInfo(activity)\n    84\t    fun getSystemInfo(): SystemInfo = systemDataSource.getSystemInfo()\n    85\t    fun getSensorInfo(activity: Activity): List&lt;SensorInfo&gt; = systemDataSource.getSensorInfo(activity)\n...\n    95\t\n    96\t    // --- NetworkDataSource ---\n    97\t    fun getNetworkInfo(): NetworkInfo = networkDataSource.getNetworkInfo()\n    98\t\n    99\t    // --- CameraDataSource ---\n   100\t    fun getCameraInfoList(): List&lt;CameraInfo&gt; = cameraDataSource.getCameraInfoList()\n   101\t\n   102\t    // متدهای جدید برای کنترل تم پویا\n   103\t    fun setDynamicThemeEnabled(enabled: Boolean) = settingsDataSource.setDynamicThemeEnabled(enabled)\n   104\t    fun isDynamicThemeEnabled(): Boolean = settingsDataSource.isDynamicThemeEnabled()\n   105\t\n   106\t    // ... (سایر توابع SystemDataSource)\n   107\t    fun getAppVersion(): String = systemDataSource.getAppVersion()\n   108\t\n   109\t    // --- متدهای جدید برای کش ---\n   110\t    fun saveDeviceInfoCache(deviceInfo: DeviceInfo) = settingsDataSource.saveDeviceInfoCache(deviceInfo)\n   111\t    fun getDeviceInfoCache(): DeviceInfo? = settingsDataSource.getDeviceInfoCache()\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/navigation/Screen.kt\n     1\tpackage ir.dekot.kavosh.ui.navigation // &lt;-- تغییر پکیج\n     2\t\n     3\timport ir.dekot.kavosh.ui.viewmodel.InfoCategory\n     4\t\n     5\tsealed class Screen {\n     6\t    data object Splash : Screen()\n     7\t    data object Dashboard : Screen()\n     8\t    data object Settings : Screen()\n     9\t    data object EditDashboard : Screen()\n    10\t    data object About : Screen()\n    11\t    data class Detail(val category: InfoCategory) : Screen()\n    12\t    data class SensorDetail(val sensorType: Int) : Screen()\n    13\t\n    14\t    data object CpuStressTest : Screen() // &lt;-- صفحه جدید\n    15\t\n    16\t    data object NetworkTools : Screen() // &lt;-- صفحه جدید\n    17\t\n    18\t    data object DisplayTest : Screen() // &lt;-- صفحه جدید\n    19\t}...\nPath: app/src/main/java/ir/dekot/kavosh/ui/screen/networktools/NetworkToolsScreen.kt\n...\n    19\timport ir.dekot.kavosh.R\n    20\timport ir.dekot.kavosh.ui.viewmodel.NetworkToolsViewModel\n    21\t\n    22\t@OptIn(ExperimentalMaterial3Api::class, ExperimentalPermissionsApi::class)\n    23\t@Composable\n    24\tfun NetworkToolsScreen(\n    25\t    viewModel: NetworkToolsViewModel = hiltViewModel(),\n    26\t    onBackClick: () -&gt; Unit\n    27\t) {\n    28\t    var selectedTabIndex by remember { mutableStateOf(0) }\n    29\t    val tabs = listOf(\&quot;Wi-Fi Scanner\&quot;, \&quot;Ping Tool\&quot;)\n    30\t\n    31\t    Scaffold(\n    32\t        topBar = {\n    33\t            TopAppBar(\n    34\t                title = { Text(\&quot;Network Tools\&quot;) },\n    35\t                // **اصلاح: افزودن دکمه با...&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01XvvANSbfJXaYY7gYSssCLU&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:53:01.093Z&quot;,&quot;response_text&quot;:&quot;حالا بیایید فایل‌های مهم دیگر را بررسی کنم:\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;48b87b70-c6cd-4d68-9731-9059133b5e96&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01J5sF6LdNsLpKXPbEoRN37W&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;CHANGELOG.md\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on app/src/main/AndroidManifest.xml:\n     1\t&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n     2\t&lt;manifest xmlns:android=\&quot;http://schemas.android.com/apk/res/android\&quot;\n     3\t    xmlns:tools=\&quot;http://schemas.android.com/tools\&quot;&gt;\n     4\t\n     5\t    &lt;uses-feature\n     6\t        android:name=\&quot;android.hardware.camera\&quot;\n     7\t        android:required=\&quot;false\&quot; /&gt;\n     8\t\n     9\t    &lt;uses-permission android:name=\&quot;android.permission.ACCESS_NETWORK_STATE\&quot; /&gt;\n    10\t    &lt;uses-permission android:name=\&quot;android.permission.READ_PHONE_STATE\&quot; /&gt;\n    11\t    &lt;uses-permission android:name=\&quot;android.permission.CAMERA\&quot; /&gt;\n    12\t    &lt;uses-permission android:name=\&quot;android.permission.ACCESS_WIFI_STATE\&quot; /&gt;\n    13\t    &lt;uses-permission android:name=\&quot;android.permission.CHANGE_WIFI_STATE\&quot; /&gt;\n    14\t    &lt;uses-permission android:name=\&quot;android.permission.ACCESS_FINE_LOCATION\&quot; /&gt;\n    15\t    &lt;uses-permission android:name=\&quot;android.permission.ACCESS_COARSE_LOCATION\&quot; /&gt;\n    16\t    &lt;uses-permission android:name=\&quot;android.permission.INTERNET\&quot; /&gt;\n    17\t\n    18\t    &lt;application\n    19\t        android:name=\&quot;.KavoshApp\&quot;\n    20\t        android:allowBackup=\&quot;true\&quot;\n    21\t        android:dataExtractionRules=\&quot;@xml/data_extraction_rules\&quot;\n    22\t        android:fullBackupContent=\&quot;@xml/backup_rules\&quot;\n    23\t        android:icon=\&quot;@mipmap/ic_launcher\&quot;\n    24\t        android:label=\&quot;@string/app_name\&quot;\n    25\t        android:roundIcon=\&quot;@mipmap/ic_launcher_round\&quot;\n    26\t        android:supportsRtl=\&quot;true\&quot;\n    27\t        android:theme=\&quot;@style/Theme.Kavosh\&quot;\n    28\t        tools:targetApi=\&quot;31\&quot;&gt;\n    29\t        &lt;activity\n    30\t            android:name=\&quot;.MainActivity\&quot;\n    31\t            android:exported=\&quot;true\&quot;\n    32\t            android:theme=\&quot;@style/Theme.Kavosh\&quot;&gt;\n    33\t            &lt;intent-filter&gt;\n    34\t                &lt;action android:name=\&quot;android.intent.action.MAIN\&quot; /&gt;\n    35\t\n    36\t                &lt;category android:name=\&quot;android.intent.category.LAUNCHER\&quot; /&gt;\n    37\t            &lt;/intent-filter&gt;\n    38\t        &lt;/activity&gt;\n    39\t    &lt;/application&gt;\n    40\t\n    41\t&lt;/manifest&gt;\nTotal lines in file: 41\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01GVuvKqzaGMvTGwKycExYoe&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:53:07.781Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;90f41837-ebf6-4815-aed4-2970d177b44b&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_015FSNdwXy52aBjy2o45U6RD&quot;,&quot;tool_name&quot;:&quot;codebase-retrieval&quot;,&quot;input_json&quot;:&quot;{\&quot;information_request\&quot;: \&quot;\\u0628\\u0631\\u0631\\u0633\\u06cc \\u0641\\u0627\\u06cc\\u0644\\u200c\\u0647\\u0627\\u06cc \\u0645\\u062f\\u0644 \\u062f\\u0627\\u062f\\u0647\\u060c ViewModel \\u0647\\u0627\\u060c UI screens \\u0627\\u0635\\u0644\\u06cc\\u060c data sources\\u060c \\u0648 dependency injection module \\u0628\\u0631\\u0627\\u06cc \\u062f\\u0631\\u06a9 \\u06a9\\u0627\\u0645\\u0644 \\u0639\\u0645\\u0644\\u06a9\\u0631\\u062f \\u067e\\u0631\\u0648\\u0698\\u0647\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;حالا بیایید چند فایل کلیدی دیگر را بررسی کنم:\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on CHANGELOG.md:\n     1\t# Changelog\n     2\t\n     3\tAll notable changes to this project will be documented in this file.\n     4\t\n     5\tThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n     6\tand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n     7\t\n     8\t## [4.6.0] - 2025-07-03\n     9\t\n    10\t### Added\n    11\t- **Installed Applications Manager:** A new screen to list all user and system applications, showing details like version, installation date, and permissions.\n    12\t\n    13\t---\nTotal lines in file: 13\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01J5sF6LdNsLpKXPbEoRN37W&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:53:13.076Z&quot;,&quot;response_text&quot;:&quot;حالا بیایید چند فایل کلیدی دیگر را بررسی کنم:\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;093f5d48-c6a0-4737-9134-b4a38f69469a&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01N1RyBTs1fnDZV5ntjAzwjG&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/res\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;حالا بیایید چند فایل مهم دیگر را بررسی کنم:\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;The following code sections were retrieved:\nPath: GEMINI.md\n     1\t##Project Overview\n     2\tThe \&quot;Kavosh\&quot; project is an open-source Android application designed to display detailed hardware and software information about the user's device. The application allows users to access details about their CPU, GPU, RAM, battery status, sensors, camera, and network. It also provides testing tools such as a storage speed test, CPU stress test, and display test.\n     3\t\n     4\t##Architecture and Technologies:\n     5\t\n     6\t-Architecture: The project follows the MVVM (Model-View-ViewModel) architecture.\n     7\t\n     8\t-User Interface (UI): Built entirely with Jetpack Compose in a declarative style.\n     9\t\n    10\t-Dependency Injection (DI): Uses Hilt to manage dependencies throughout the application.\n...\n    49\t\n    50\tPermission Handling: The accompanist-permissions library is used for requesting permissions. The permission status should be checked, and the appropriate UI (permission request or information display) should be shown to the user.\n    51\t\n    52\t##Key Files\n    53\tHere is a list of important project files and their roles:\n    54\t\n    55\t-MainActivity.kt: The main entry point of the application. It handles initial setup like language, theme, and launching the DeviceInspectorApp. It also manages the file-saving launcher.\n    56\t\n    57\t-di/AppModule.kt: The Hilt module that defines how to provide all project dependencies, especially DataSources and the Repository.\n    58\t\n    59\t-data/repository/DeviceInfoRepository.kt: Acts as the Single Source of Truth. This class manages all calls to the various DataSources and provides the data needed by the ViewModels.\n    60\t\n    61\t-data/source/ (Package): Contains classes that directly interact with Android APIs to fetch hardware and software information.\n    62\t\n    63\t-SocDataSource.kt: CPU and GPU information.\n    64\t\n    65\t-PowerDataSource.kt: Battery and component temperature information.\n    66\t\n    67\t-MemoryDataSource.kt: RAM and internal storage information.\n    68\t\n    69\t-SystemDataSource.kt: Operating system, display, and sensor information.\n    70\t\n    71\t-NetworkDataSource.kt &amp; NetworkToolsDataSource.kt: Network information and related tools.\n    72\t\n    73\t-ui/viewmodel/ (Package): Contains all the ViewModels for the application.\n    74\t\n    75\t-DeviceInfoViewModel.kt: The main ViewModel for holding and managing general device data and live data.\n    76\t\n    77\t-NavigationViewModel.kt: Manages the current navigation state of the app and controls the back stack.\n    78\t\n    79\t-DashboardViewModel.kt: Manages the order and visibility of dashboard items.\n    80\t\n    81\t-SettingsViewModel.kt: Manages application settings like theme and language.\n    82\t\n    83\t-ui/screen/ (Package): Contains all full-screen composables, each constituting a screen in the application.\n    84\t\n    85\t-DashboardScreen.kt: The main screen that displays the different categories.\n    86\t\n    87\t-DetailScreen.kt: The screen for displaying the details of a specific category.\n    88\t\n    89\t-SensorDetailScreen.kt: A dedicated screen for displaying live data from a sensor.\n...\n   105\t\n   106\t-KavoshApp.kt: The Application class, annotated with @HiltAndroidApp to set up Hilt at the application level.\n   107\t\n   108\t-data/model/ (Package): Contains data classes that model the structure of information for different components (e.g., CpuInfo, BatteryInfo, etc.).\n   109\t\n   110\t-domain/sensor/ (Package): Contains the logic for sensor management, including SensorHandler for registering and receiving sensor data, and SensorState for modeling different sensor states.\n   111\t\n   112\t-ui/theme/ (Package): Contains files related to the application's theme in Jetpack Compose.\n   113\t\n   114\t-Theme.kt: Main theme definition, including color palettes for light, dark, and AMOLED modes.\n   115\t\n   116\t-Color.kt: Definition of base colors.\n   117\t\n   118\t-Type.kt: Definition of typography styles.\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/screen/DeviceInspectorScreen.kt\n...\n    18\timport ir.dekot.kavosh.ui.screen.sensordetail.SensorDetailScreen\n    19\timport ir.dekot.kavosh.ui.screen.settings.SettingsScreen\n    20\timport ir.dekot.kavosh.ui.screen.splash.SplashScreen\n    21\timport ir.dekot.kavosh.ui.screen.stresstest.CpuStressTestScreen\n    22\timport ir.dekot.kavosh.ui.viewmodel.*\n    23\t\n    24\t@SuppressLint(\&quot;NewApi\&quot;)\n    25\t@RequiresApi(Build.VERSION_CODES.R)\n    26\t@Composable\n    27\tfun DeviceInspectorApp(\n    28\t    deviceInfoViewModel: DeviceInfoViewModel,\n    29\t    settingsViewModel: SettingsViewModel,\n    30\t    dashboardViewModel: DashboardViewModel,\n    31\t    exportViewModel: ExportViewModel,\n    32\t    navigationViewModel: NavigationViewModel,\n    33\t    onStartScan: () -&gt; Unit\n    34\t) {\n    35\t    val currentScreen by navigationViewModel.currentScreen.collectAsState()\n    36\t\n    37\t    // ... (کد LaunchedEffect)\n    38\t\n    39\t    // **اصلاح ۱: حذف BackHandler از اینجا و انتقال به داخل case ها**\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/viewmodel/DeviceInfoViewModel.kt\n...\n   161\t\n   162\t        val displayInfo = repository.getDisplayInfo(activity)\n   163\t        val thermalInfo = repository.getThermalInfo()\n   164\t        val networkInfo = repository.getNetworkInfo()\n   165\t\n   166\t        return DeviceInfo(\n   167\t            cpu = cpuInfoJob.await(),\n   168\t            gpu = gpuInfoJob.await(),\n   169\t            ram = ramInfoJob.await(),\n   170\t            storage = storageInfoJob.await(),\n   171\t            system = systemInfoJob.await(),\n   172\t            sensors = sensorInfoJob.await(),\n   173\t            cameras = cameraInfoJob.await(),\n   174\t            simCards = simInfoJob.await(), // &lt;-- افزودن نتیجه به مدل\n   175\t            display = displayInfo,\n   176\t            thermal = thermalInfo,\n   177\t            network = networkInfo\n   178\t        )\n   179\t    }\n   180\t\n   181\t    fun startScan(activity: Activity, onScanComplete: () -&gt; Unit) {\n   182\t        if (_isScanning.value) return\n   183\t\n   184\t        viewModelScope.launch {\n   185\t            _isScanning.value = true\n   186\t            _scanProgress.value = 0f\n   187\t\n   188\t            val animationJob = launch {\n   189\t                launch { for (i in 1..100) { delay(150); _scanProgress.value = i / 100f } }\n   190\t                _scanStatusText.value = \&quot;در حال خواندن مشخصات دستگاه...\&quot;\n   191\t                delay(5000)\n   192\t                _scanStatusText.value = \&quot;دریافت اطلاعات از درایور ها...\&quot;\n   193\t                delay(5000)\n   194\t                _scanStatusText.value = \&quot;ثبت اطلاعات...\&quot;\n   195\t            }\n   196\t\n   197\t            val dataLoadingJob = launch {\n   198\t                _deviceInfo.value = fetchAllDeviceInfo(activity)\n   199\t                // **اصلاح کلیدی: ذخیره اطلاعات در کش پس از اسکن موفق**\n   200\t                repository.saveDeviceInfoCache(_deviceInfo.value)\n   201\t            }\n   202\t\n   203\t            animationJob.join()\n   204\t            dataLoadingJob.join()\n   205\t            repository.setFirstLaunchCompleted()\n   206\t            hasLoadedData = true\n   207\t\n   208\t            onScanComplete() // به لایه ناوبری اطلاع می‌دهیم که اسکن تمام شد\n   209\t            _isScanning.value = false\n   210\t        }\n   211\t    }\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/viewmodel/StorageViewModel.kt\n...\n    42\t\n    43\t        viewModelScope.launch(Dispatchers.IO) {\n    44\t            _isStorageTesting.value = true\n    45\t            _writeSpeed.value = context.getString(R.string.testing)\n    46\t            _readSpeed.value = context.getString(R.string.testing)\n    47\t            _storageTestProgress.value = 0f\n    48\t\n    49\t            try {\n    50\t                val result = repository.performStorageSpeedTest { progress -&gt;\n    51\t                    // به‌روزرسانی نوار پیشرفت باید در ترد اصلی انجام شود\n    52\t                    viewModelScope.launch(Dispatchers.Main) {\n    53\t                        _storageTestProgress.value = progress\n    54\t                    }\n    55\t                }\n    56\t                _writeSpeed.value = result.first\n    57\t                _readSpeed.value = result.second\n    58\t            } catch (e: Exception) {\n    59\t                e.printStackTrace()\n    60\t                _writeSpeed.value = context.getString(R.string.label_error)\n    61\t                _readSpeed.value = context.getString(R.string.label_error)\n    62\t            } finally {\n    63\t                _isStorageTesting.value = false\n    64\t                _storageTestProgress.value = 0f\n    65\t            }\n    66\t        }\n    67\t    }\n    68\t}...\nPath: app/src/main/java/ir/dekot/kavosh/MainActivity.kt\n...\n    20\timport androidx.compose.ui.Modifier\n    21\timport androidx.compose.ui.platform.LocalLayoutDirection\n    22\timport androidx.compose.ui.unit.LayoutDirection\n    23\timport androidx.lifecycle.Lifecycle\n    24\timport androidx.lifecycle.lifecycleScope\n    25\timport androidx.lifecycle.repeatOnLifecycle\n    26\timport dagger.hilt.android.AndroidEntryPoint\n    27\timport ir.dekot.kavosh.data.model.settings.Theme\n    28\timport ir.dekot.kavosh.ui.screen.DeviceInspectorApp\n    29\timport ir.dekot.kavosh.ui.viewmodel.DeviceInfoViewModel\n    30\timport ir.dekot.kavosh.ui.viewmodel.SettingsViewModel // &lt;-- ایمپورت جدید\n    31\timport ir.dekot.kavosh.ui.theme.KavoshTheme // &lt;-- ایمپورت اصلاح شده\n    32\timport ir.dekot.kavosh.ui.viewmodel.DashboardViewModel\n    33\timport ir.dekot.kavosh.ui.viewmodel.ExportViewModel\n...\nPath: app/src/main/java/ir/dekot/kavosh/data/repository/DeviceInfoRepository.kt\n...\n    32\timport kotlinx.coroutines.flow.Flow\n    33\timport javax.inject.Inject\n    34\timport javax.inject.Singleton\n    35\t\n    36\t@Singleton\n    37\tclass DeviceInfoRepository @Inject constructor(\n    38\t    private val powerDataSource: PowerDataSource,\n    39\t    private val socDataSource: SocDataSource,\n    40\t    private val systemDataSource: SystemDataSource,\n    41\t    private val memoryDataSource: MemoryDataSource,\n    42\t    private val settingsDataSource: SettingsDataSource,\n    43\t    private val networkDataSource: NetworkDataSource, // &lt;-- تزریق سورس جدید\n    44\t    private val cameraDataSource: CameraDataSource, // &lt;-- تزریق سورس جدید\n    45\t    private val networkToolsDataSource: NetworkToolsDataSource, // &lt;-- تزریق سورس جدید\n    46\t    private val simDataSource: SimDataSource // &lt;-- تزریق سورس جدید\n    47\t) {\n    48\t\n    49\t    // --- SettingsDataSource ---\n...\n    62\t    fun getHiddenCategories(): Set&lt;InfoCategory&gt; = settingsDataSource.getHiddenCategories()\n    63\t    // متدهای جدید برای کنترل قابلیت جابجایی\n    64\t    fun setReorderingEnabled(enabled: Boolean) = settingsDataSource.setReorderingEnabled(enabled)\n    65\t    fun isReorderingEnabled(): Boolean = settingsDataSource.isReorderingEnabled()\n    66\t\n    67\t\n    68\t\n    69\t    // --- PowerDataSource ---\n    70\t    fun getThermalInfo(): List&lt;ThermalInfo&gt; = powerDataSource.getThermalInfo()\n    71\t    fun getBatteryInfo(intent: Intent): BatteryInfo = powerDataSource.getBatteryInfo(intent)\n    72\t    fun getInitialBatteryInfo(): BatteryInfo? = powerDataSource.getInitialBatteryInfo()\n    73\t\n    74\t    // --- SocDataSource ---\n    75\t    fun getCpuInfo(): CpuInfo = socDataSource.getCpuInfo()\n    76\t    fun getLiveCpuFrequencies(): List&lt;String&gt; = socDataSource.getLiveCpuFrequencies()\n    77\t    fun getGpuLoadPercentage(): Int? = socDataSource.getGpuLoadPercentage()\n    78\t    suspend fun getGpuInfo(activity: Activity): GpuInfo = socDataSource.getGpuInfo(activity)\n    79\t\n    80\t    // --- SystemDataSource ---\n    81\t    // امضای این دو متد را برای دریافت Activity تغییر می‌دهیم\n    82\t    @RequiresApi(30)\n    83\t    fun getDisplayInfo(activity: Activity): DisplayInfo = systemDataSource.getDisplayInfo(activity)\n    84\t    fun getSystemInfo(): SystemInfo = systemDataSource.getSystemInfo()\n    85\t    fun getSensorInfo(activity: Activity): List&lt;SensorInfo&gt; = systemDataSource.getSensorInfo(activity)\n...\n    95\t\n    96\t    // --- NetworkDataSource ---\n    97\t    fun getNetworkInfo(): NetworkInfo = networkDataSource.getNetworkInfo()\n    98\t\n    99\t    // --- CameraDataSource ---\n   100\t    fun getCameraInfoList(): List&lt;CameraInfo&gt; = cameraDataSource.getCameraInfoList()\n   101\t\n   102\t    // متدهای جدید برای کنترل تم پویا\n   103\t    fun setDynamicThemeEnabled(enabled: Boolean) = settingsDataSource.setDynamicThemeEnabled(enabled)\n   104\t    fun isDynamicThemeEnabled(): Boolean = settingsDataSource.isDynamicThemeEnabled()\n   105\t\n   106\t    // ... (سایر توابع SystemDataSource)\n   107\t    fun getAppVersion(): String = systemDataSource.getAppVersion()\n   108\t\n   109\t    // --- متدهای جدید برای کش ---\n   110\t    fun saveDeviceInfoCache(deviceInfo: DeviceInfo) = settingsDataSource.saveDeviceInfoCache(deviceInfo)\n   111\t    fun getDeviceInfoCache(): DeviceInfo? = settingsDataSource.getDeviceInfoCache()\n...\nPath: app/src/main/java/ir/dekot/kavosh/di/AppModule.kt\n     1\tpackage ir.dekot.kavosh.di\n     2\t\n     3\timport android.content.Context\n     4\timport dagger.Module\n     5\timport dagger.Provides\n     6\timport dagger.hilt.InstallIn\n     7\timport dagger.hilt.android.qualifiers.ApplicationContext\n     8\timport dagger.hilt.components.SingletonComponent\n     9\timport ir.dekot.kavosh.data.repository.DeviceInfoRepository\n    10\timport ir.dekot.kavosh.data.source.*\n    11\timport ir.dekot.kavosh.domain.sensor.SensorHandler\n    12\timport javax.inject.Singleton\n    13\t\n    14\t@Module\n    15\t@InstallIn(SingletonComponent::class)\n    16\tobject AppModule {\n    17\t\n    18\t    @Provides\n    19\t    @Singleton\n    20\t    fun provideSimDataSource(@ApplicationContext context: Context): SimDataSource {\n    21\t        return SimDataSource(context)\n    22\t    }\n    23\t\n    24\t    /**\n    25\t     * این تابع به Hilt یاد می‌دهد که چگونه یک نمونه از DeviceInfoRepository بسازد.\n    26\t     * Hilt به صورت خودکار تمام پارامترهای این تابع (DataSourceها) را فراهم می‌کند.\n    27\t     */\n    28\t    @Provides\n    29\t    @Singleton\n    30\t    fun provideNetworkDataSource(@ApplicationContext context: Context): NetworkDataSource {\n    31\t        return NetworkDataSource(context)\n    32\t    }\n    33\t\n    34\t    // **اصلاح ۱: افزودن provider برای سورس جدید**\n    35\t    @Provides\n    36\t    @Singleton\n    37\t    fun provideNetworkToolsDataSource(@ApplicationContext context: Context): NetworkToolsDataSource {\n    38\t        return NetworkToolsDataSource(context)\n    39\t    }\n...\n    46\t\n    47\t    @Provides\n    48\t    @Singleton\n    49\t    fun provideDeviceInfoRepository(\n    50\t        powerDataSource: PowerDataSource,\n    51\t        socDataSource: SocDataSource,\n    52\t        systemDataSource: SystemDataSource,\n    53\t        memoryDataSource: MemoryDataSource,\n    54\t        settingsDataSource: SettingsDataSource,\n    55\t        networkDataSource: NetworkDataSource, // &lt;-- اضافه کردن به پارامترها\n    56\t        simDataSource: SimDataSource, // &lt;-- تزریق جدید\n    57\t        cameraDataSource: CameraDataSource, // &lt;-- اضافه کردن به پارامترها\n    58\t        // **اصلاح ۲: افزودن وابستگی جدید به پارامترها**\n    59\t        networkToolsDataSource: NetworkToolsDataSource\n    60\t    ): DeviceInfoRepository {\n    61\t        return DeviceInfoRepository(\n    62\t            powerDataSource,\n    63\t            socDataSource,\n    64\t            systemDataSource,\n    65\t            memoryDataSource,\n    66\t            settingsDataSource,\n    67\t            networkDataSource, // &lt;-- پاس دادن به constructor\n    68\t            cameraDataSource,// &lt;-- پاس دادن به constructor\n...\n    91\t\n    92\t    /**\n    93\t     * *** تغییر کلیدی: ***\n    94\t     * این تابع حالا Context را به عنوان ورودی می‌گیرد و به SystemDataSource پاس می‌دهد.\n    95\t     */\n    96\t    @Provides\n    97\t    @Singleton\n    98\t    fun provideSystemDataSource(@ApplicationContext context: Context): SystemDataSource {\n    99\t        return SystemDataSource(context)\n   100\t    }\n   101\t\n   102\t    // این تابع قبلا بدون پارامتر بود، حالا context را می‌گیرد\n   103\t    @Provides\n   104\t    @Singleton\n   105\t    fun provideMemoryDataSource(@ApplicationContext context: Context): MemoryDataSource {\n   106\t        return MemoryDataSource(context)\n   107\t    }\n   108\t\n   109\t\n   110\t    @Provides\n   111\t    @Singleton\n   112\t    fun provideSettingsDataSource(@ApplicationContext context: Context): SettingsDataSource {\n   113\t        return SettingsDataSource(context)\n   114\t    }\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/screen/dashboard/DashboardScreen.kt\n...\n    52\t\n    53\t@RequiresApi(Build.VERSION_CODES.R)\n    54\t@OptIn(ExperimentalMaterial3Api::class, ExperimentalFoundationApi::class)\n    55\t@Composable\n    56\tfun DashboardScreen(\n    57\t    settingsViewModel: SettingsViewModel,\n    58\t    dashboardViewModel: DashboardViewModel,\n    59\t    exportViewModel: ExportViewModel,\n    60\t    onCategoryClick: (InfoCategory, Context) -&gt; Unit,\n    61\t    onSettingsClick: () -&gt; Unit,\n    62\t    onEditDashboardClick: () -&gt; Unit\n    63\t) {\n    64\t    val snackbarHostState = remember { SnackbarHostState() }\n    65\t    val scope = rememberCoroutineScope()\n    66\t    val context = LocalContext.current\n    67\t\n    68\t    val dashboardItems by dashboardViewModel.dashboardItems.collectAsState()\n    69\t    val isReorderingEnabled by settingsViewModel.isReorderingEnabled.collectAsState()\n    70\t\n    71\t    val gridState = rememberLazyGridState()\n    72\t    val dragState = rememberDashboardDragState(\n    73\t        gridState = gridState,\n    74\t        onOrderChanged = { newOrder -&gt; dashboardViewModel.saveDashboardOrder(newOrder) }\n    75\t    )\n    76\t\n    77\t    LaunchedEffect(dashboardItems) {\n    78\t        dragState.updateItems(dashboardItems.filter { it.isVisible })\n    79\t    }\n    80\t\n    81\t    var showMenu by remember { mutableStateOf(false) }\n    82\t\n    83\t    LaunchedEffect(Unit) {\n    84\t        exportViewModel.exportResult.collectLatest { result -&gt;\n    85\t            val message = when (result) {\n    86\t                is ExportResult.Success -&gt; result.message\n    87\t                is ExportResult.Failure -&gt; result.message\n    88\t            }\n    89\t            scope.launch {\n    90\t                snackbarHostState.showSnackbar(message)\n    91\t            }\n    92\t        }\n    93\t    }\n...\n   134\t    ) { paddingValues -&gt;\n   135\t        LazyVerticalGrid(\n   136\t            state = gridState,\n   137\t            columns = GridCells.Fixed(3),\n   138\t            modifier = Modifier\n   139\t                .padding(paddingValues)\n   140\t                .padding(16.dp),\n   141\t            horizontalArrangement = Arrangement.spacedBy(16.dp),\n   142\t            verticalArrangement = Arrangement.spacedBy(16.dp)\n   143\t        ) {\n   144\t            items(dragState.localItems, key = { it.category.name }) { item -&gt;\n   145\t                val isDragging = dragState.draggedItemKey == item.category.name\n   146\t                val scale by animateFloatAsState(if (isDragging) 1.1f else 1f, label = \&quot;scale\&quot;)\n   147\t                val elevation by animateFloatAsState(if (isDragging) 12.dp.value else 1.dp.value, label = \&quot;elevation\&quot;)\n...\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_015FSNdwXy52aBjy2o45U6RD&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:53:26.153Z&quot;,&quot;response_text&quot;:&quot;حالا بیایید چند فایل مهم دیگر را بررسی کنم:\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;1dd39984-d457-4f8d-89d7-00100537ce5a&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_01YbP6kXiQvH3aTkbAAZmzSf&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;app/src/main/res/values/strings.xml\&quot;, \&quot;type\&quot;: \&quot;file\&quot;, \&quot;view_range\&quot;: [1, 50]}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/res, excluding hidden items:\napp/src/main/res/drawable\napp/src/main/res/drawable\\ic_barometer.xml\napp/src/main/res/drawable\\ic_launcher_background.xml\napp/src/main/res/drawable\\ic_launcher_foreground.xml\napp/src/main/res/layout\napp/src/main/res/mipmap-anydpi\napp/src/main/res/mipmap-anydpi\\ic_launcher.xml\napp/src/main/res/mipmap-anydpi\\ic_launcher_round.xml\napp/src/main/res/mipmap-hdpi\napp/src/main/res/mipmap-hdpi\\ic_launcher.webp\napp/src/main/res/mipmap-hdpi\\ic_launcher_round.webp\napp/src/main/res/mipmap-mdpi\napp/src/main/res/mipmap-mdpi\\ic_launcher.webp\napp/src/main/res/mipmap-mdpi\\ic_launcher_round.webp\napp/src/main/res/mipmap-xhdpi\napp/src/main/res/mipmap-xhdpi\\ic_launcher.webp\napp/src/main/res/mipmap-xhdpi\\ic_launcher_round.webp\napp/src/main/res/mipmap-xxhdpi\napp/src/main/res/mipmap-xxhdpi\\ic_launcher.webp\napp/src/main/res/mipmap-xxhdpi\\ic_launcher_round.webp\napp/src/main/res/mipmap-xxxhdpi\napp/src/main/res/mipmap-xxxhdpi\\ic_launcher.webp\napp/src/main/res/mipmap-xxxhdpi\\ic_launcher_round.webp\napp/src/main/res/values\napp/src/main/res/values-fa\napp/src/main/res/values-fa\\strings.xml\napp/src/main/res/values\\colors.xml\napp/src/main/res/values\\strings.xml\napp/src/main/res/values\\themes.xml\napp/src/main/res/xml\napp/src/main/res/xml\\backup_rules.xml\napp/src/main/res/xml\\data_extraction_rules.xml\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01N1RyBTs1fnDZV5ntjAzwjG&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:53:36.289Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;805fe4d3-367f-4a09-a55c-3d5be3f8be44&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;## خلاصه کامل پروژه Kavosh\n\nبعد از بررسی دقیق پروژه، اینجا خلاصه‌ای کامل از پروژه **Kavosh** ارائه می‌دهم:\n\n###  **هدف و ماهیت پروژه**\n**Kavosh** یک اپلیکیشن Android متن‌باز است که برای نمایش اطلاعات دقیق سخت‌افزاری و نرم‌افزاری دستگاه کاربر طراحی شده. این اپ امکان دسترسی به جزئیات CPU، GPU، RAM، وضعیت باتری، سنسورها، دوربین و شبکه را فراهم می‌کند.\n\n### ️ **معماری و تکنولوژی‌ها**\n- **معماری**: MVVM (Model-View-ViewModel)\n- **UI**: کاملاً با Jetpack Compose ساخته شده\n- **Dependency Injection**: از Hilt استفاده می‌کند\n- **زبان**: Kotlin\n- **حداقل SDK**: 28 (Android 9)\n- **هدف SDK**: 35\n- **نسخه فعلی**: 4.4.3beta\n\n###  **ساختار پروژه**\n\n#### **پکیج‌های اصلی:**\n1. **`data/`** - لایه داده\n   - `model/` - مدل‌های داده\n   - `repository/` - Repository pattern\n   - `source/` - Data Sources\n\n2. **`ui/`** - لایه رابط کاربری\n   - `screen/` - صفحات مختلف\n   - `viewmodel/` - ViewModelها\n   - `theme/` - تم و استایل\n   - `composables/` - کامپوننت‌های قابل استفاده مجدد\n\n3. **`domain/`** - منطق کسب‌وکار\n   - `sensor/` - مدیریت سنسورها\n\n4. **`di/`** - Dependency Injection\n5. **`util/`** - ابزارهای کمکی\n\n###  **ویژگی‌های کلیدی**\n\n#### **اطلاعات سخت‌افزاری:**\n- CPU (فرکانس، هسته‌ها، معماری)\n- GPU (مدل، درایور)\n- RAM (حافظه کل، در دسترس)\n- ذخیره‌سازی (فضای داخلی، کارت SD)\n- باتری (درصد، دما، وضعیت شارژ)\n- سنسورها (شتاب‌سنج، ژیروسکوپ، مغناطیس و...)\n- دوربین (رزولوشن، قابلیت‌ها)\n- شبکه (Wi-Fi، موبایل، IP)\n\n#### **ابزارهای تست:**\n- تست سرعت ذخیره‌سازی\n- تست استرس CPU\n- تست نمایشگر\n- ابزارهای شبکه (Wi-Fi Scanner، Ping)\n\n#### **قابلیت‌های UI/UX:**\n- پشتیبانی از زبان فارسی و انگلیسی\n- تم‌های مختلف (روشن، تاریک، AMOLED، پویا)\n- داشبورد قابل تنظیم\n- امکان جابجایی آیتم‌ها\n- خروجی گزارش (PDF، JSON، TXT)\n\n###  **صفحات اصلی**\n1. **Splash Screen** - صفحه آغازین با اسکن\n2. **Dashboard** - صفحه اصلی با کارت‌های اطلاعات\n3. **Detail Screens** - جزئیات هر دسته\n4. **Settings** - تنظیمات اپ\n5. **Sensor Detail** - نمایش زنده داده‌های سنسور\n6. **Stress Test** - تست‌های عملکرد\n7. **Network Tools** - ابزارهای شبکه\n8. **Display Test** - تست نمایشگر\n\n###  **ViewModelها**\n- **DeviceInfoViewModel** - مدیریت اطلاعات کلی دستگاه\n- **SettingsViewModel** - مدیریت تنظیمات\n- **DashboardViewModel** - مدیریت ترتیب داشبورد\n- **ExportViewModel** - مدیریت خروجی فایل\n- **NavigationViewModel** - مدیریت ناوبری\n- **NetworkToolsViewModel** - ابزارهای شبکه\n- **CpuStressTestViewModel** - تست استرس\n- **DisplayTestViewModel** - تست نمایشگر\n\n###  **Data Sources**\n- **SocDataSource** - اطلاعات CPU/GPU\n- **PowerDataSource** - باتری و دما\n- **MemoryDataSource** - RAM و ذخیره‌سازی\n- **SystemDataSource** - سیستم‌عامل و نمایشگر\n- **NetworkDataSource** - اطلاعات شبکه\n- **CameraDataSource** - اطلاعات دوربین\n- **SimDataSource** - اطلاعات سیم‌کارت\n- **SettingsDataSource** - تنظیمات اپ\n\n###  **تم و استایل**\n- پشتیبانی از Material Design 3\n- تم‌های مختلف با رنگ‌بندی سفارشی\n- پشتیبانی از Dynamic Color (Android 12+)\n- RTL Support برای فارسی\n\n###  **مجوزها**\n- دسترسی به وضعیت شبکه\n- خواندن وضعیت تلفن\n- دسترسی به دوربین\n- دسترسی به Wi-Fi\n- دسترسی به موقعیت مکانی\n\n###  **وضعیت فعلی پروژه**\n- نسخه 4.4.3beta در حال توسعه\n- آخرین تغییرات در تاریخ 2025-07-03\n- قابلیت جدید: مدیریت اپلیکیشن‌های نصب شده\n\nاین پروژه یک نمونه عالی از معماری مدرن Android با استفاده از بهترین practices و کتابخانه‌های روز است. آیا سوال خاصی در مورد بخش خاصی از پروژه دارید؟\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on app/src/main/res/values/strings.xml:\n     1\t&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n     2\t&lt;resources&gt;\n     3\t    &lt;string name=\&quot;app_name\&quot;&gt;Kavosh&lt;/string&gt;\n     4\t    &lt;string name=\&quot;settings\&quot;&gt;Settings&lt;/string&gt;\n     5\t    &lt;string name=\&quot;back\&quot;&gt;Back&lt;/string&gt;\n     6\t    &lt;string name=\&quot;choose_app_theme\&quot;&gt;Choose App Theme&lt;/string&gt;\n     7\t    &lt;string name=\&quot;system_default\&quot;&gt;System Default&lt;/string&gt;\n     8\t    &lt;string name=\&quot;light\&quot;&gt;Light&lt;/string&gt;\n     9\t    &lt;string name=\&quot;dark\&quot;&gt;Dark&lt;/string&gt;\n    10\t    &lt;string name=\&quot;dynamic_theme\&quot;&gt;Dynamic Theme&lt;/string&gt;\n    11\t    &lt;string name=\&quot;dashboard_settings\&quot;&gt;Dashboard Settings&lt;/string&gt;\n    12\t    &lt;string name=\&quot;enable_item_reordering\&quot;&gt;Enable Item Reordering&lt;/string&gt;\n    13\t    &lt;string name=\&quot;language_settings\&quot;&gt;Language&lt;/string&gt;\n    14\t    &lt;string name=\&quot;choose_language\&quot;&gt;Choose app language&lt;/string&gt;\n    15\t    &lt;string name=\&quot;persian\&quot;&gt;Persian&lt;/string&gt;\n    16\t    &lt;string name=\&quot;english\&quot;&gt;English&lt;/string&gt;\n    17\t    &lt;string name=\&quot;edit_dashboard_items\&quot;&gt;Show/Hide Items&lt;/string&gt;\n    18\t    &lt;string name=\&quot;scan_device\&quot;&gt;Scan Device&lt;/string&gt;\n    19\t    &lt;string name=\&quot;ready_to_scan\&quot;&gt;Ready to scan…&lt;/string&gt;\n    20\t    &lt;string name=\&quot;copy\&quot;&gt;Copy&lt;/string&gt;\n    21\t    &lt;string name=\&quot;share\&quot;&gt;Share&lt;/string&gt;\n    22\t    &lt;string name=\&quot;cancel\&quot;&gt;Cancel&lt;/string&gt;\n    23\t    &lt;string name=\&quot;copied_to_clipboard\&quot;&gt;Copied to clipboard&lt;/string&gt;\n    24\t    &lt;string name=\&quot;copy_selection_title\&quot;&gt;Select items to copy&lt;/string&gt;\n    25\t    &lt;string name=\&quot;copy_selection_button\&quot;&gt;Copy Selected&lt;/string&gt;\n    26\t    &lt;string name=\&quot;share_selection_title\&quot;&gt;Select items to share&lt;/string&gt;\n    27\t    &lt;string name=\&quot;share_selection_button\&quot;&gt;Share Selected&lt;/string&gt;\n    28\t    &lt;string name=\&quot;share_via\&quot;&gt;Share via…&lt;/string&gt;\n    29\t    &lt;string name=\&quot;full_report_title\&quot;&gt;Full Device Specification Report&lt;/string&gt;\n    30\t    &lt;string name=\&quot;file_exported_successfully\&quot;&gt;File saved successfully to your chosen path.&lt;/string&gt;\n    31\t    &lt;string name=\&quot;file_export_failed\&quot;&gt;Error creating file. Please try again.&lt;/string&gt;\n    32\t    &lt;string name=\&quot;category_soc\&quot;&gt;Hardware&lt;/string&gt;\n    33\t    &lt;string name=\&quot;category_device\&quot;&gt;Device&lt;/string&gt;\n    34\t    &lt;string name=\&quot;category_system\&quot;&gt;System&lt;/string&gt;\n    35\t    &lt;string name=\&quot;category_battery\&quot;&gt;Battery&lt;/string&gt;\n    36\t    &lt;string name=\&quot;category_sensors\&quot;&gt;Sensors&lt;/string&gt;\n    37\t    &lt;string name=\&quot;category_thermal\&quot;&gt;Thermal&lt;/string&gt;\n    38\t    &lt;string name=\&quot;category_network\&quot;&gt;Network&lt;/string&gt;\n    39\t    &lt;string name=\&quot;category_camera\&quot;&gt;Camera&lt;/string&gt;\n    40\t    &lt;string name=\&quot;label_undefined\&quot;&gt;Undefined&lt;/string&gt;\n    41\t    &lt;string name=\&quot;label_rooted\&quot;&gt;Rooted&lt;/string&gt;\n    42\t    &lt;string name=\&quot;label_not_rooted\&quot;&gt;Not Rooted&lt;/string&gt;\n    43\t    &lt;string name=\&quot;label_yes\&quot;&gt;Yes&lt;/string&gt;\n    44\t    &lt;string name=\&quot;label_no\&quot;&gt;No&lt;/string&gt;\n    45\t    &lt;string name=\&quot;label_on\&quot;&gt;On&lt;/string&gt;\n    46\t    &lt;string name=\&quot;label_off\&quot;&gt;Off&lt;/string&gt;\n    47\t    &lt;string name=\&quot;label_disconnected\&quot;&gt;Disconnected&lt;/string&gt;\n    48\t    &lt;string name=\&quot;label_not_available\&quot;&gt;N/A&lt;/string&gt;\n    49\t    &lt;string name=\&quot;label_permission_required\&quot;&gt;Permission Required&lt;/string&gt;\n    50\t    &lt;string name=\&quot;label_sleeping\&quot;&gt;Sleeping&lt;/string&gt;\nTotal lines in file: 222\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_01YbP6kXiQvH3aTkbAAZmzSf&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T06:53:44.499Z&quot;,&quot;response_text&quot;:&quot;## خلاصه کامل پروژه Kavosh\n\nبعد از بررسی دقیق پروژه، اینجا خلاصه‌ای کامل از پروژه **Kavosh** ارائه می‌دهم:\n\n###  **هدف و ماهیت پروژه**\n**Kavosh** یک اپلیکیشن Android متن‌باز است که برای نمایش اطلاعات دقیق سخت‌افزاری و نرم‌افزاری دستگاه کاربر طراحی شده. این اپ امکان دسترسی به جزئیات CPU، GPU، RAM، وضعیت باتری، سنسورها، دوربین و شبکه را فراهم می‌کند.\n\n### ️ **معماری و تکنولوژی‌ها**\n- **معماری**: MVVM (Model-View-ViewModel)\n- **UI**: کاملاً با Jetpack Compose ساخته شده\n- **Dependency Injection**: از Hilt استفاده می‌کند\n- **زبان**: Kotlin\n- **حداقل SDK**: 28 (Android 9)\n- **هدف SDK**: 35\n- **نسخه فعلی**: 4.4.3beta\n\n###  **ساختار پروژه**\n\n#### **پکیج‌های اصلی:**\n1. **`data/`** - لایه داده\n   - `model/` - مدل‌های داده\n   - `repository/` - Repository pattern\n   - `source/` - Data Sources\n\n2. **`ui/`** - لایه رابط کاربری\n   - `screen/` - صفحات مختلف\n   - `viewmodel/` - ViewModelها\n   - `theme/` - تم و استایل\n   - `composables/` - کامپوننت‌های قابل استفاده مجدد\n\n3. **`domain/`** - منطق کسب‌وکار\n   - `sensor/` - مدیریت سنسورها\n\n4. **`di/`** - Dependency Injection\n5. **`util/`** - ابزارهای کمکی\n\n###  **ویژگی‌های کلیدی**\n\n#### **اطلاعات سخت‌افزاری:**\n- CPU (فرکانس، هسته‌ها، معماری)\n- GPU (مدل، درایور)\n- RAM (حافظه کل، در دسترس)\n- ذخیره‌سازی (فضای داخلی، کارت SD)\n- باتری (درصد، دما، وضعیت شارژ)\n- سنسورها (شتاب‌سنج، ژیروسکوپ، مغناطیس و...)\n- دوربین (رزولوشن، قابلیت‌ها)\n- شبکه (Wi-Fi، موبایل، IP)\n\n#### **ابزارهای تست:**\n- تست سرعت ذخیره‌سازی\n- تست استرس CPU\n- تست نمایشگر\n- ابزارهای شبکه (Wi-Fi Scanner، Ping)\n\n#### **قابلیت‌های UI/UX:**\n- پشتیبانی از زبان فارسی و انگلیسی\n- تم‌های مختلف (روشن، تاریک، AMOLED، پویا)\n- داشبورد قابل تنظیم\n- امکان جابجایی آیتم‌ها\n- خروجی گزارش (PDF، JSON، TXT)\n\n###  **صفحات اصلی**\n1. **Splash Screen** - صفحه آغازین با اسکن\n2. **Dashboard** - صفحه اصلی با کارت‌های اطلاعات\n3. **Detail Screens** - جزئیات هر دسته\n4. **Settings** - تنظیمات اپ\n5. **Sensor Detail** - نمایش زنده داده‌های سنسور\n6. **Stress Test** - تست‌های عملکرد\n7. **Network Tools** - ابزارهای شبکه\n8. **Display Test** - تست نمایشگر\n\n###  **ViewModelها**\n- **DeviceInfoViewModel** - مدیریت اطلاعات کلی دستگاه\n- **SettingsViewModel** - مدیریت تنظیمات\n- **DashboardViewModel** - مدیریت ترتیب داشبورد\n- **ExportViewModel** - مدیریت خروجی فایل\n- **NavigationViewModel** - مدیریت ناوبری\n- **NetworkToolsViewModel** - ابزارهای شبکه\n- **CpuStressTestViewModel** - تست استرس\n- **DisplayTestViewModel** - تست نمایشگر\n\n###  **Data Sources**\n- **SocDataSource** - اطلاعات CPU/GPU\n- **PowerDataSource** - باتری و دما\n- **MemoryDataSource** - RAM و ذخیره‌سازی\n- **SystemDataSource** - سیستم‌عامل و نمایشگر\n- **NetworkDataSource** - اطلاعات شبکه\n- **CameraDataSource** - اطلاعات دوربین\n- **SimDataSource** - اطلاعات سیم‌کارت\n- **SettingsDataSource** - تنظیمات اپ\n\n###  **تم و استایل**\n- پشتیبانی از Material Design 3\n- تم‌های مختلف با رنگ‌بندی سفارشی\n- پشتیبانی از Dynamic Color (Android 12+)\n- RTL Support برای فارسی\n\n###  **مجوزها**\n- دسترسی به وضعیت شبکه\n- خواندن وضعیت تلفن\n- دسترسی به دوربین\n- دسترسی به Wi-Fi\n- دسترسی به موقعیت مکانی\n\n###  **وضعیت فعلی پروژه**\n- نسخه 4.4.3beta در حال توسعه\n- آخرین تغییرات در تاریخ 2025-07-03\n- قابلیت جدید: مدیریت اپلیکیشن‌های نصب شده\n\nاین پروژه یک نمونه عالی از معماری مدرن Android با استفاده از بهترین practices و کتابخانه‌های روز است. آیا سوال خاصی در مورد بخش خاصی از پروژه دارید؟\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;failed&quot;,&quot;request_message&quot;:&quot;خب قبل از اینکه شروع کنیم بزار یه سری چیز هارو بگم که باید همیشه رعایت کنی : اول اینکه من از دو تا فایل رشته ای در پکیج ریسورس استفاده میکنم برای اینکه منطق دوزبانه برنامه رو مدیریت کنم . همچنین همیشه به همراه کدت کامنت هایدرست و معناداری به زبان فارسی بنویس که در آینده اگ خواستم چیزی رو تغییر بدم متوجه بشم .هم چنین هر تغییری که در کد ها ایجاد کردی گزارشش رو به همراه تغییر ورژ« حالا به نسبت اینکه چقدر تغییر بزرگ بوده(پچ یا مینور یا میجور) در فایل چنج لاگ ذخیره کن . اگر متوججه شدی بریم تا روی پروژ] کار کنیم&quot;,&quot;rich_text_json_repr&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;خب قبل از اینکه شروع کنیم بزار یه سری چیز هارو بگم که باید همیشه رعایت کنی : اول اینکه من از دو تا فایل رشته ای در پکیج ریسورس استفاده میکنم برای اینکه منطق دوزبانه برنامه رو مدیریت کنم . همچنین همیشه به همراه کدت کامنت هایدرست و معناداری به زبان فارسی بنویس که در آینده اگ خواستم چیزی رو تغییر بدم متوجه بشم .هم چنین هر تغییری که در کد ها ایجاد کردی گزارشش رو به همراه تغییر ورژ« حالا به نسبت اینکه چقدر تغییر بزرگ بوده(پچ یا مینور یا میجور) در فایل چنج لاگ ذخیره کن . اگر متوججه شدی بریم تا روی پروژ] کار کنیم&quot;}]}]},&quot;mentioned_items&quot;:[],&quot;structured_output_nodes&quot;:[],&quot;seen_state&quot;:&quot;unseen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:0,&quot;type&quot;:0,&quot;text_node&quot;:{&quot;content&quot;:&quot;خب قبل از اینکه شروع کنیم بزار یه سری چیز هارو بگم که باید همیشه رعایت کنی : اول اینکه من از دو تا فایل رشته ای در پکیج ریسورس استفاده میکنم برای اینکه منطق دوزبانه برنامه رو مدیریت کنم . همچنین همیشه به همراه کدت کامنت هایدرست و معناداری به زبان فارسی بنویس که در آینده اگ خواستم چیزی رو تغییر بدم متوجه بشم .هم چنین هر تغییری که در کد ها ایجاد کردی گزارشش رو به همراه تغییر ورژ« حالا به نسبت اینکه چقدر تغییر بزرگ بوده(پچ یا مینور یا میجور) در فایل چنج لاگ ذخیره کن . اگر متوججه شدی بریم تا روی پروژ] کار کنیم&quot;}},{&quot;id&quot;:1,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;,&quot;folderRoot&quot;:&quot;D:/Android_Projects/Kavosh&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-07-03T07:00:57.002Z&quot;}],&quot;feedbackStates&quot;:{&quot;temp-fe-59fdf477-70bb-435d-928c-34f23051364e&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-d801d0c5-dcec-4b2e-9d66-526cf620399f&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-0120fac9-b876-4dd5-aff1-484c684fc831&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-ae6d0e10-da54-4df9-9f9f-4df8803137b4&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-6624bacf-d0b7-4379-854f-7988780b01d0&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-67014b45-eb31-4661-85b9-c157639f8dad&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-173f1bb9-b7f1-4a96-ba96-d5d7c12a19bd&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-0525c1d8-c06c-4dfb-82aa-2e653760577b&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-159b5e70-b231-4502-8d19-fd553f7f00a0&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-f61774d6-17e4-4a95-aea3-2bb2ae7f4394&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-2c40a837-10ae-474b-84b8-7eda86acaf87&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-f0126a04-5380-4bce-adeb-f76098eead17&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-7762cbcf-3117-4ffc-9396-f378b4707210&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-2fe9752d-a411-48df-a579-84bf9ff898cc&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-e83addd5-2e06-4bcf-915d-7785d875e73b&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-2dfc9c90-5e85-4149-9545-ee705cb5f084&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-3d920f0b-3aed-4140-bcba-15d309f7f86b&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-eaa96d47-90ad-47fb-b341-2430ac8bbe75&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-4610dbd0-ba3f-4d97-97fd-fe7af6cd0195&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-a87f6c58-bfdb-4b6d-b2bf-a143b9b4c24c&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-8667c7af-37dd-4aef-a809-f3cef0da3b57&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-2a7e1cf8-d93e-4568-a722-25989bbc05af&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-2d39af82-3ce3-482c-88f6-559865a930c5&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-7b66f4ea-aa9d-4a5f-9851-a4eb26a71e3c&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-386c0d58-0fe5-4054-bbe0-9ee42df54aec&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-5c1bbd14-d07e-4af2-bd30-8ea702ed2a66&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-17fd2590-f8c2-45f4-956f-fb997e9e0b97&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-efa5e4ab-6461-48e1-bd43-54d92e232fdd&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-ce0a5706-aa0d-49b8-9b90-deff41bee3aa&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-f0a5098b-fbab-4f9f-990d-cf8176c55317&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;}},&quot;toolUseStates&quot;:{&quot;7e64ed11-752d-4d06-a45a-3d253d14b4e6;toolu_01VoCHBhHxiezmRQzeqAGxnD&quot;:{&quot;requestId&quot;:&quot;7e64ed11-752d-4d06-a45a-3d253d14b4e6&quot;,&quot;toolUseId&quot;:&quot;toolu_01VoCHBhHxiezmRQzeqAGxnD&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in ., excluding hidden items:\n./CHANGELOG.md\n./GEMINI.md\n./app\n./app\\build\n./app\\build.gradle.kts\n./app\\proguard-rules.pro\n./app\\release\n./app\\sampledata\n./app\\src\n./build\n./build.gradle.kts\n./build\\reports\n./gradle\n./gradle.properties\n./gradle\\libs.versions.toml\n./gradle\\wrapper\n./gradlew\n./gradlew.bat\n./local.properties\n./settings.gradle.kts\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;b8b96170-8fc2-4787-bf5d-9ac028d66b9b;toolu_01CWGrPTHQGX9mVcrDCA6Ge9&quot;:{&quot;requestId&quot;:&quot;b8b96170-8fc2-4787-bf5d-9ac028d66b9b&quot;,&quot;toolUseId&quot;:&quot;toolu_01CWGrPTHQGX9mVcrDCA6Ge9&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src, excluding hidden items:\napp/src/androidTest\napp/src/androidTest\\java\napp/src/main\napp/src/main\\AndroidManifest.xml\napp/src/main\\java\napp/src/main\\res\napp/src/test\napp/src/test\\java\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;69f8f723-4bf5-42a2-a464-c14b7197c340;toolu_01AJzZDDf2Z5cZtjPy63P5Bc&quot;:{&quot;requestId&quot;:&quot;69f8f723-4bf5-42a2-a464-c14b7197c340&quot;,&quot;toolUseId&quot;:&quot;toolu_01AJzZDDf2Z5cZtjPy63P5Bc&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java, excluding hidden items:\napp/src/main/java/ir\napp/src/main/java/ir\\dekot\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;55e4ea96-85c1-41ac-bbf6-4fcc19da1b4d;toolu_013YUzPJS22YxrQVcwv2Z2H2&quot;:{&quot;requestId&quot;:&quot;55e4ea96-85c1-41ac-bbf6-4fcc19da1b4d&quot;,&quot;toolUseId&quot;:&quot;toolu_013YUzPJS22YxrQVcwv2Z2H2&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh\napp/src/main/java/ir/dekot/kavosh\\KavoshApp.kt\napp/src/main/java/ir/dekot/kavosh\\MainActivity.kt\napp/src/main/java/ir/dekot/kavosh\\data\napp/src/main/java/ir/dekot/kavosh\\di\napp/src/main/java/ir/dekot/kavosh\\domain\napp/src/main/java/ir/dekot/kavosh\\ui\napp/src/main/java/ir/dekot/kavosh\\util\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;5709c11e-5c2a-4efd-b251-927bdc9e4f3f;toolu_01BNHVQpWT5aySYhGTzSLhZH&quot;:{&quot;requestId&quot;:&quot;5709c11e-5c2a-4efd-b251-927bdc9e4f3f&quot;,&quot;toolUseId&quot;:&quot;toolu_01BNHVQpWT5aySYhGTzSLhZH&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on build.gradle.kts:\n     1\t// Top-level build file where you can add configuration options common to all sub-projects/modules.\n     2\tplugins {\n     3\t    alias(libs.plugins.android.application) apply false\n     4\t    alias(libs.plugins.kotlin.android) apply false\n     5\t    alias(libs.plugins.kotlin.compose) apply false\n     6\t    alias(libs.plugins.hilt) apply false // &lt;-- این خط را اضافه کن\n     7\t    alias(libs.plugins.kapt) apply false // &lt;-- این خط را اضافه کن\n     8\t    id(\&quot;org.jetbrains.kotlin.plugin.serialization\&quot;) version \&quot;2.2.0\&quot; apply false // نسخه را با نسخه کاتلین خود هماهنگ کنید\n     9\t}\nTotal lines in file: 9\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;e7f2bbdc-839b-498c-a112-9b5d3d4d417e;toolu_0156jH8QivuKufiE6haUqPCP&quot;:{&quot;requestId&quot;:&quot;e7f2bbdc-839b-498c-a112-9b5d3d4d417e&quot;,&quot;toolUseId&quot;:&quot;toolu_0156jH8QivuKufiE6haUqPCP&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on app/build.gradle.kts:\n     1\tplugins {\n     2\t    alias(libs.plugins.android.application)\n     3\t    alias(libs.plugins.kotlin.android)\n     4\t    alias(libs.plugins.kotlin.compose)\n     5\t    alias(libs.plugins.kapt) // &lt;-- به این شکل صحیح است\n     6\t    alias(libs.plugins.hilt) // &lt;-- به این شکل صحیح است\n     7\t    id(\&quot;org.jetbrains.kotlin.plugin.serialization\&quot;) // &lt;-- این پلاگین را اضافه کنید\n     8\t\n     9\t}\n    10\t\n    11\tandroid {\n    12\t    namespace = \&quot;ir.dekot.kavosh\&quot;\n    13\t    compileSdk = 36\n    14\t\n    15\t    defaultConfig {\n    16\t        applicationId = \&quot;ir.dekot.kavosh\&quot;\n    17\t        minSdk = 28\n    18\t        targetSdk = 35\n    19\t        versionCode = 1\n    20\t        versionName = \&quot;4.4.3beta\&quot;\n    21\t\n    22\t        testInstrumentationRunner = \&quot;androidx.test.runner.AndroidJUnitRunner\&quot;\n    23\t    }\n    24\t\n    25\t    buildTypes {\n    26\t        release {\n    27\t            // فعال‌سازی R8 برای کاهش حجم کد و مبهم‌سازی\n    28\t            isMinifyEnabled = true\n    29\t            // فعال‌سازی حذف منابع استفاده نشده\n    30\t            isShrinkResources = true\n    31\t            proguardFiles(\n    32\t                getDefaultProguardFile(\&quot;proguard-android-optimize.txt\&quot;),\n    33\t                \&quot;proguard-rules.pro\&quot;\n    34\t            )\n    35\t        }\n    36\t        setProperty(\&quot;archivesBaseName\&quot;, \&quot;kavosh-${defaultConfig.versionName}\&quot;)\n    37\t    }\n    38\t    compileOptions {\n    39\t        sourceCompatibility = JavaVersion.VERSION_11\n    40\t        targetCompatibility = JavaVersion.VERSION_11\n    41\t    }\n    42\t    kotlin { // Or tasks.withType&lt;org.jetbrains.kotlin.gradle.tasks.KotlinCompile&gt;()\n    43\t        compilerOptions {\n    44\t            jvmTarget.set(org.jetbrains.kotlin.gradle.dsl.JvmTarget.JVM_11) // Or your specific JVM version\n    45\t            // You can add other Kotlin compiler options here if needed\n    46\t            // e.g., freeCompilerArgs.add(\&quot;-Xopt-in=kotlin.RequiresOptIn\&quot;)\n    47\t        }\n    48\t    }\n    49\t    buildFeatures {\n    50\t        compose = true\n    51\t    }\n    52\t}\n    53\t\n    54\tdependencies {\n    55\t\n    56\t    implementation(libs.androidx.core.ktx)\n    57\t    implementation(libs.androidx.material.icons.extended)\n    58\t    implementation(libs.androidx.lifecycle.runtime.ktx)\n    59\t    implementation(libs.androidx.activity.compose)\n    60\t    implementation(platform(libs.androidx.compose.bom))\n    61\t    implementation(libs.androidx.ui)\n    62\t    implementation(libs.androidx.ui.graphics)\n    63\t    implementation(libs.androidx.ui.tooling.preview)\n    64\t    implementation(libs.androidx.material3)\n    65\t    implementation(libs.kotlinx.serialization.json)\n    66\t//    implementation(libs.androidx.media3.common.ktx)\n    67\t    testImplementation(libs.junit)\n    68\t    androidTestImplementation(libs.androidx.junit)\n    69\t    androidTestImplementation(libs.androidx.espresso.core)\n    70\t    androidTestImplementation(platform(libs.androidx.compose.bom))\n    71\t    androidTestImplementation(libs.androidx.ui.test.junit4)\n    72\t    debugImplementation(libs.androidx.ui.tooling)\n    73\t    debugImplementation(libs.androidx.ui.test.manifest)\n    74\t    implementation(libs.accompanist.permissions)\n    75\t    // Hilt\n    76\t    implementation(libs.hilt.android)\n    77\t    kapt(libs.hilt.compiler)\n    78\t    testImplementation(libs.mockk)\n    79\t    testImplementation(libs.mockk.agent.jvm)\n    80\t    implementation(libs.hilt.navigation.compose)\n    81\t\n    82\t}\nTotal lines in file: 82\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;cc0b64e5-18d5-437f-bd58-80f3f680fdd9;toolu_01TxpZvTUgJ71MhR4jHXWnVs&quot;:{&quot;requestId&quot;:&quot;cc0b64e5-18d5-437f-bd58-80f3f680fdd9&quot;,&quot;toolUseId&quot;:&quot;toolu_01TxpZvTUgJ71MhR4jHXWnVs&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on gradle/libs.versions.toml:\n     1\t[versions]\n     2\taccompanistPermissions = \&quot;0.37.3\&quot;\n     3\tagp = \&quot;8.11.0\&quot;\n     4\tkotlin = \&quot;2.2.0\&quot;\n     5\tcoreKtx = \&quot;1.16.0\&quot;\n     6\tjunit = \&quot;4.13.2\&quot;\n     7\tjunitVersion = \&quot;1.2.1\&quot;\n     8\tespressoCore = \&quot;3.6.1\&quot;\n     9\tkotlinxSerializationJson = \&quot;1.9.0\&quot;\n    10\tlifecycleRuntimeKtx = \&quot;2.9.1\&quot;\n    11\tactivityCompose = \&quot;1.10.1\&quot;\n    12\tcomposeBom = \&quot;2025.06.01\&quot;\n    13\t#media3CommonKtx = \&quot;1.7.1\&quot;\n    14\thilt = \&quot;2.56.2\&quot; # &lt;-- نسخه Hilt را اضافه کنید\n    15\tmockk = \&quot;1.14.4\&quot;\n    16\tmockkAgentJvm = \&quot;1.14.4\&quot;\n    17\thiltNavigationCompose = \&quot;1.2.0\&quot; # &lt;-- این خط را اضافه کنید\n    18\t\n    19\t\n    20\t[libraries]\n    21\taccompanist-permissions = { module = \&quot;com.google.accompanist:accompanist-permissions\&quot;, version.ref = \&quot;accompanistPermissions\&quot; }\n    22\tandroidx-core-ktx = { group = \&quot;androidx.core\&quot;, name = \&quot;core-ktx\&quot;, version.ref = \&quot;coreKtx\&quot; }\n    23\t# کتابخانه جدید برای جابجایی آیتم‌ها\n    24\tandroidx-material-icons-extended = { module = \&quot;androidx.compose.material:material-icons-extended\&quot; }\n    25\tjunit = { group = \&quot;junit\&quot;, name = \&quot;junit\&quot;, version.ref = \&quot;junit\&quot; }\n    26\tandroidx-junit = { group = \&quot;androidx.test.ext\&quot;, name = \&quot;junit\&quot;, version.ref = \&quot;junitVersion\&quot; }\n    27\tandroidx-espresso-core = { group = \&quot;androidx.test.espresso\&quot;, name = \&quot;espresso-core\&quot;, version.ref = \&quot;espressoCore\&quot; }\n    28\tandroidx-lifecycle-runtime-ktx = { group = \&quot;androidx.lifecycle\&quot;, name = \&quot;lifecycle-runtime-ktx\&quot;, version.ref = \&quot;lifecycleRuntimeKtx\&quot; }\n    29\tandroidx-activity-compose = { group = \&quot;androidx.activity\&quot;, name = \&quot;activity-compose\&quot;, version.ref = \&quot;activityCompose\&quot; }\n    30\tandroidx-compose-bom = { group = \&quot;androidx.compose\&quot;, name = \&quot;compose-bom\&quot;, version.ref = \&quot;composeBom\&quot; }\n    31\tandroidx-ui = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui\&quot; }\n    32\tandroidx-ui-graphics = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui-graphics\&quot; }\n    33\tandroidx-ui-tooling = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui-tooling\&quot; }\n    34\tandroidx-ui-tooling-preview = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui-tooling-preview\&quot; }\n    35\tandroidx-ui-test-manifest = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui-test-manifest\&quot; }\n    36\tandroidx-ui-test-junit4 = { group = \&quot;androidx.compose.ui\&quot;, name = \&quot;ui-test-junit4\&quot; }\n    37\tandroidx-material3 = { group = \&quot;androidx.compose.material3\&quot;, name = \&quot;material3\&quot; }\n    38\t#androidx-media3-common-ktx = { group = \&quot;androidx.media3\&quot;, name = \&quot;media3-common-ktx\&quot;, version.ref = \&quot;media3CommonKtx\&quot; }\n    39\thilt-android = { group = \&quot;com.google.dagger\&quot;, name = \&quot;hilt-android\&quot;, version.ref = \&quot;hilt\&quot; } # &lt;-- اضافه کنید\n    40\thilt-compiler = { group = \&quot;com.google.dagger\&quot;, name = \&quot;hilt-android-compiler\&quot;, version.ref = \&quot;hilt\&quot; } # &lt;-- اضافه کنید\n    41\tkotlinx-serialization-json = { module = \&quot;org.jetbrains.kotlinx:kotlinx-serialization-json\&quot;, version.ref = \&quot;kotlinxSerializationJson\&quot; }\n    42\tmockk-agent-jvm = { module = \&quot;io.mockk:mockk-agent-jvm\&quot;, version.ref = \&quot;mockkAgentJvm\&quot; }\n    43\tmockk = { module = \&quot;io.mockk:mockk\&quot;, version.ref = \&quot;mockk\&quot; }\n    44\thilt-navigation-compose = { group = \&quot;androidx.hilt\&quot;, name = \&quot;hilt-navigation-compose\&quot;, version.ref = \&quot;hiltNavigationCompose\&quot; } # &lt;-- این خط را اضافه کنید\n    45\t\n    46\t\n    47\t[plugins]\n    48\tandroid-application = { id = \&quot;com.android.application\&quot;, version.ref = \&quot;agp\&quot; }\n    49\tkotlin-android = { id = \&quot;org.jetbrains.kotlin.android\&quot;, version.ref = \&quot;kotlin\&quot; }\n    50\tkotlin-compose = { id = \&quot;org.jetbrains.kotlin.plugin.compose\&quot;, version.ref = \&quot;kotlin\&quot; }\n    51\thilt = { id = \&quot;com.google.dagger.hilt.android\&quot;, version.ref = \&quot;hilt\&quot; } # &lt;-- اضافه کنید\n    52\tkapt = { id = \&quot;org.jetbrains.kotlin.kapt\&quot;, version.ref = \&quot;kotlin\&quot; } # &lt;-- این خط را به این شکل اصلاح کن\n    53\t\n    54\t\n    55\t\nTotal lines in file: 55\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;3d9c056f-7d43-4f74-b211-77267e5ccbff;toolu_01PrtHFWySqAYB9Acaf3RLGT&quot;:{&quot;requestId&quot;:&quot;3d9c056f-7d43-4f74-b211-77267e5ccbff&quot;,&quot;toolUseId&quot;:&quot;toolu_01PrtHFWySqAYB9Acaf3RLGT&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on app/src/main/java/ir/dekot/kavosh/KavoshApp.kt:\n     1\tpackage ir.dekot.kavosh\n     2\t\n     3\timport android.app.Application\n     4\timport dagger.hilt.android.HiltAndroidApp\n     5\t\n     6\t/**\n     7\t * کلاس Application سفارشی برای راه‌اندازی Hilt.\n     8\t * انوتیشن @HiltAndroidApp باعث می‌شود Hilt کدهای مورد نیاز\n     9\t * برای تزریق وابستگی در سطح اپلیکیشن را تولید کند.\n    10\t */\n    11\t@HiltAndroidApp\n    12\tclass KavoshApp : Application() {\n    13\t    // در حال حاضر نیازی به کد اضافی در این کلاس نیست.\n    14\t}\nTotal lines in file: 14\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;4a0416d7-9b5a-43ce-95b7-ff242f3e127a;toolu_014zmHiY7PAFWQ6eP9VCztCK&quot;:{&quot;requestId&quot;:&quot;4a0416d7-9b5a-43ce-95b7-ff242f3e127a&quot;,&quot;toolUseId&quot;:&quot;toolu_014zmHiY7PAFWQ6eP9VCztCK&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on app/src/main/java/ir/dekot/kavosh/MainActivity.kt:\n     1\tpackage ir.dekot.kavosh\n     2\t\n     3\timport android.content.Context\n     4\timport android.content.res.Configuration\n     5\timport android.os.Build\n     6\timport android.os.Bundle\n     7\timport androidx.activity.ComponentActivity\n     8\timport androidx.activity.compose.setContent\n     9\timport androidx.activity.enableEdgeToEdge\n    10\timport androidx.activity.result.contract.ActivityResultContracts\n    11\timport androidx.activity.viewModels\n    12\timport androidx.annotation.RequiresApi\n    13\timport androidx.compose.foundation.isSystemInDarkTheme\n    14\timport androidx.compose.foundation.layout.fillMaxSize\n    15\timport androidx.compose.material3.MaterialTheme\n    16\timport androidx.compose.material3.Surface\n    17\timport androidx.compose.runtime.CompositionLocalProvider\n    18\timport androidx.compose.runtime.collectAsState\n    19\timport androidx.compose.runtime.getValue\n    20\timport androidx.compose.ui.Modifier\n    21\timport androidx.compose.ui.platform.LocalLayoutDirection\n    22\timport androidx.compose.ui.unit.LayoutDirection\n    23\timport androidx.lifecycle.Lifecycle\n    24\timport androidx.lifecycle.lifecycleScope\n    25\timport androidx.lifecycle.repeatOnLifecycle\n    26\timport dagger.hilt.android.AndroidEntryPoint\n    27\timport ir.dekot.kavosh.data.model.settings.Theme\n    28\timport ir.dekot.kavosh.ui.screen.DeviceInspectorApp\n    29\timport ir.dekot.kavosh.ui.viewmodel.DeviceInfoViewModel\n    30\timport ir.dekot.kavosh.ui.viewmodel.SettingsViewModel // &lt;-- ایمپورت جدید\n    31\timport ir.dekot.kavosh.ui.theme.KavoshTheme // &lt;-- ایمپورت اصلاح شده\n    32\timport ir.dekot.kavosh.ui.viewmodel.DashboardViewModel\n    33\timport ir.dekot.kavosh.ui.viewmodel.ExportViewModel\n    34\timport ir.dekot.kavosh.ui.viewmodel.NavigationViewModel\n    35\timport kotlinx.coroutines.flow.collectLatest\n    36\timport kotlinx.coroutines.launch\n    37\timport java.util.Locale\n    38\t\n    39\t@AndroidEntryPoint\n    40\tclass MainActivity : ComponentActivity() {\n    41\t\n    42\t    private val deviceInfoViewModel: DeviceInfoViewModel by viewModels()\n    43\t    private val settingsViewModel: SettingsViewModel by viewModels()\n    44\t    private val dashboardViewModel: DashboardViewModel by viewModels()\n    45\t    private val exportViewModel: ExportViewModel by viewModels() // &lt;-- اضافه کردن ViewModel جدید\n    46\t    private val navigationViewModel: NavigationViewModel by viewModels() // &lt;-- اضافه کردن ViewModel جدید\n    47\t\n    48\t\n    49\t    @RequiresApi(Build.VERSION_CODES.R)\n    50\t    private val createFileLauncher = registerForActivityResult(\n    51\t        ActivityResultContracts.CreateDocument(\&quot;*/*\&quot;)\n    52\t    ) { uri -&gt;\n    53\t        uri?.let {\n    54\t            val format = exportViewModel.pendingExportFormat\n    55\t            if (format != null) {\n    56\t                // اطلاعات دستگاه را از ViewModel اصلی می‌خوانیم و به ViewModel خروجی پاس می‌دهیم\n    57\t                val currentDeviceInfo = deviceInfoViewModel.deviceInfo.value\n    58\t                exportViewModel.performExport(it, format, currentDeviceInfo)\n    59\t            }\n    60\t        }\n    61\t    }\n    62\t\n    63\t    @RequiresApi(Build.VERSION_CODES.R)\n    64\t    override fun attachBaseContext(newBase: Context) {\n    65\t        // از متد استاتیک ViewModel جدید استفاده می‌کنیم\n    66\t        val lang = SettingsViewModel.getSavedLanguage(newBase)\n    67\t        val locale = Locale(lang)\n    68\t        Locale.setDefault(locale)\n    69\t        val config = Configuration(newBase.resources.configuration)\n    70\t        config.setLocale(locale)\n    71\t        val context = newBase.createConfigurationContext(config)\n    72\t        super.attachBaseContext(context)\n    73\t    }\n    74\t\n    75\t    @RequiresApi(Build.VERSION_CODES.R)\n    76\t    override fun onCreate(savedInstanceState: Bundle?) {\n    77\t        super.onCreate(savedInstanceState)\n    78\t\n    79\t        // به رویدادهای ViewModel جدید گوش می‌دهیم\n    80\t        lifecycleScope.launch {\n    81\t            exportViewModel.exportRequest.collectLatest { format -&gt;\n    82\t                val fileName = \&quot;Kavosh_Report_${System.currentTimeMillis()}.${format.extension}\&quot;\n    83\t                createFileLauncher.launch(fileName)\n    84\t            }\n    85\t        }\n    86\t\n    87\t        lifecycleScope.launch {\n    88\t            // به رویداد تغییر زبان از ViewModel جدید گوش می‌دهیم\n    89\t            settingsViewModel.languageChangeRequest.collectLatest {\n    90\t                recreate()\n    91\t            }\n    92\t        }\n    93\t\n    94\t        lifecycleScope.launch {\n    95\t            lifecycle.repeatOnLifecycle(Lifecycle.State.STARTED) {\n    96\t                deviceInfoViewModel.loadDataForNonFirstLaunch(this@MainActivity)\n    97\t            }\n    98\t        }\n    99\t\n   100\t        enableEdgeToEdge()\n   101\t        setContent {\n   102\t            // زبان و تم را از ViewModel جدید می‌خوانیم\n   103\t            val language by settingsViewModel.language.collectAsState()\n   104\t            val currentTheme by settingsViewModel.themeState.collectAsState() // &lt;-- خواندن تم\n   105\t            val dynamicColor by settingsViewModel.isDynamicThemeEnabled.collectAsState()\n   106\t\n   107\t\n   108\t            val useDarkTheme = when (currentTheme) {\n   109\t                Theme.SYSTEM -&gt; isSystemInDarkTheme()\n   110\t                Theme.LIGHT -&gt; false\n   111\t                Theme.DARK -&gt; true\n   112\t                Theme.AMOLED -&gt; true // تم AMOLED هم تم تاریک محسوب می‌شود\n   113\t            }\n   114\t\n   115\t            val layoutDirection = if (language == \&quot;fa\&quot;) LayoutDirection.Rtl else LayoutDirection.Ltr\n   116\t\n   117\t            CompositionLocalProvider(LocalLayoutDirection provides layoutDirection) {\n   118\t                // تم را اینجا بر اساس داده‌های SettingsViewModel تنظیم می‌کنیم\n   119\t                KavoshTheme(\n   120\t                    darkTheme = useDarkTheme,\n   121\t                    dynamicColor = dynamicColor,\n   122\t                    theme = currentTheme\n   123\t                ) {\n   124\t                    Surface(\n   125\t                        modifier = Modifier.fillMaxSize(),\n   126\t                        color = MaterialTheme.colorScheme.background\n   127\t                    ) {\n   128\t                        DeviceInspectorApp(\n   129\t                            // هر دو ViewModel را به تابع اصلی پاس می‌دهیم\n   130\t                            deviceInfoViewModel = deviceInfoViewModel,\n   131\t                            settingsViewModel = settingsViewModel,\n   132\t                            dashboardViewModel = dashboardViewModel, // &lt;-- پاس دادن ViewModel جدید\n   133\t                            exportViewModel = exportViewModel, // &lt;-- پاس دادن ViewModel جدید\n   134\t                            navigationViewModel = navigationViewModel, // &lt;-- پاس دادن ViewModel جدید\n   135\t                            onStartScan = {\n   136\t                                deviceInfoViewModel.startScan(this) {\n   137\t                                    // بعد از اتمام اسکن، به ViewModel ناوبری اطلاع می‌دهیم\n   138\t                                    navigationViewModel.onScanCompleted()\n   139\t                                }\n   140\t                            }\n   141\t                        )\n   142\t                    }\n   143\t                }\n   144\t            }\n   145\t        }\n   146\t    }\n   147\t}\nTotal lines in file: 147\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;a6dd9dc1-33ea-49f1-b533-a0372e62667d;toolu_017uTUfgNombrE9N8ZHvy6ug&quot;:{&quot;requestId&quot;:&quot;a6dd9dc1-33ea-49f1-b533-a0372e62667d&quot;,&quot;toolUseId&quot;:&quot;toolu_017uTUfgNombrE9N8ZHvy6ug&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot/kavosh/data, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh/data/model\napp/src/main/java/ir/dekot/kavosh/data/model\\DeviceInfoModels.kt\napp/src/main/java/ir/dekot/kavosh/data/model\\components\napp/src/main/java/ir/dekot/kavosh/data/model\\settings\napp/src/main/java/ir/dekot/kavosh/data/repository\napp/src/main/java/ir/dekot/kavosh/data/repository\\DeviceInfoRepository.kt\napp/src/main/java/ir/dekot/kavosh/data/source\napp/src/main/java/ir/dekot/kavosh/data/source\\CameraDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\MemoryDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\NetworkDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\NetworkToolsDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\PowerDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\SettingsDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\SimDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\SocDataSource.kt\napp/src/main/java/ir/dekot/kavosh/data/source\\SystemDataSource.kt\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;d9c5d840-f9f4-45cd-8c76-77e67c0cf1d1;toolu_01VTsEmP6RpfMXZgVyzmrwkT&quot;:{&quot;requestId&quot;:&quot;d9c5d840-f9f4-45cd-8c76-77e67c0cf1d1&quot;,&quot;toolUseId&quot;:&quot;toolu_01VTsEmP6RpfMXZgVyzmrwkT&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot/kavosh/ui, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh/ui/composables\napp/src/main/java/ir/dekot/kavosh/ui/composables\\InfoCard.kt\napp/src/main/java/ir/dekot/kavosh/ui/composables\\InfoRow.kt\napp/src/main/java/ir/dekot/kavosh/ui/composables\\SharedComposables.kt\napp/src/main/java/ir/dekot/kavosh/ui/navigation\napp/src/main/java/ir/dekot/kavosh/ui/navigation\\Screen.kt\napp/src/main/java/ir/dekot/kavosh/ui/screen\napp/src/main/java/ir/dekot/kavosh/ui/screen\\DeviceInspectorScreen.kt\napp/src/main/java/ir/dekot/kavosh/ui/screen\\about\napp/src/main/java/ir/dekot/kavosh/ui/screen\\dashboard\napp/src/main/java/ir/dekot/kavosh/ui/screen\\detail\napp/src/main/java/ir/dekot/kavosh/ui/screen\\displaytest\napp/src/main/java/ir/dekot/kavosh/ui/screen\\networktools\napp/src/main/java/ir/dekot/kavosh/ui/screen\\sensordetail\napp/src/main/java/ir/dekot/kavosh/ui/screen\\settings\napp/src/main/java/ir/dekot/kavosh/ui/screen\\splash\napp/src/main/java/ir/dekot/kavosh/ui/screen\\stresstest\napp/src/main/java/ir/dekot/kavosh/ui/theme\napp/src/main/java/ir/dekot/kavosh/ui/theme\\Color.kt\napp/src/main/java/ir/dekot/kavosh/ui/theme\\Theme.kt\napp/src/main/java/ir/dekot/kavosh/ui/theme\\Type.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\CpuStressTestViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\DashboardViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\DeviceInfoViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\DisplayTestViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\ExportFormat.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\ExportViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\InfoCategory.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\NavigationViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\NetworkToolsViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\SettingsViewModel.kt\napp/src/main/java/ir/dekot/kavosh/ui/viewmodel\\StorageViewModel.kt\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;f748d11c-001d-44d6-964e-33bb0810de71;toolu_015uC1naWDeRUseyTDcBgEYw&quot;:{&quot;requestId&quot;:&quot;f748d11c-001d-44d6-964e-33bb0810de71&quot;,&quot;toolUseId&quot;:&quot;toolu_015uC1naWDeRUseyTDcBgEYw&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot/kavosh/di, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh/di/AppModule.kt\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;b289fd4c-7d95-4422-9710-fd67309e161d;toolu_01H2FCi6cKggUqF5Gmfcjx5u&quot;:{&quot;requestId&quot;:&quot;b289fd4c-7d95-4422-9710-fd67309e161d&quot;,&quot;toolUseId&quot;:&quot;toolu_01H2FCi6cKggUqF5Gmfcjx5u&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot/kavosh/domain, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh/domain/CpuStresser.kt\napp/src/main/java/ir/dekot/kavosh/domain/sensor\napp/src/main/java/ir/dekot/kavosh/domain/sensor\\SensorHandler.kt\napp/src/main/java/ir/dekot/kavosh/domain/sensor\\SensorState.kt\napp/src/main/java/ir/dekot/kavosh/domain/test.kt\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;797b32ee-5a03-4213-9255-516753b02319;toolu_01UyBmm86nkR2mVyscRt5vwR&quot;:{&quot;requestId&quot;:&quot;797b32ee-5a03-4213-9255-516753b02319&quot;,&quot;toolUseId&quot;:&quot;toolu_01UyBmm86nkR2mVyscRt5vwR&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/java/ir/dekot/kavosh/util, excluding hidden items:\napp/src/main/java/ir/dekot/kavosh/util/FormatUtils.kt\napp/src/main/java/ir/dekot/kavosh/util/ImageUtils.kt\napp/src/main/java/ir/dekot/kavosh/util/PermissionUtils.kt\napp/src/main/java/ir/dekot/kavosh/util/ShareUtils.kt\napp/src/main/java/ir/dekot/kavosh/util/report\napp/src/main/java/ir/dekot/kavosh/util/report\\PdfGenerator.kt\napp/src/main/java/ir/dekot/kavosh/util/report\\ReportFormatter.kt\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;a47bd7b5-bad1-4970-8c78-67c1c26ef5a4;toolu_01XvvANSbfJXaYY7gYSssCLU&quot;:{&quot;requestId&quot;:&quot;a47bd7b5-bad1-4970-8c78-67c1c26ef5a4&quot;,&quot;toolUseId&quot;:&quot;toolu_01XvvANSbfJXaYY7gYSssCLU&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;The following code sections were retrieved:\nPath: GEMINI.md\n     1\t##Project Overview\n     2\tThe \&quot;Kavosh\&quot; project is an open-source Android application designed to display detailed hardware and software information about the user's device. The application allows users to access details about their CPU, GPU, RAM, battery status, sensors, camera, and network. It also provides testing tools such as a storage speed test, CPU stress test, and display test.\n     3\t\n     4\t##Architecture and Technologies:\n     5\t\n     6\t-Architecture: The project follows the MVVM (Model-View-ViewModel) architecture.\n     7\t\n     8\t-User Interface (UI): Built entirely with Jetpack Compose in a declarative style.\n     9\t\n    10\t-Dependency Injection (DI): Uses Hilt to manage dependencies throughout the application.\n...\n    49\t\n    50\tPermission Handling: The accompanist-permissions library is used for requesting permissions. The permission status should be checked, and the appropriate UI (permission request or information display) should be shown to the user.\n    51\t\n    52\t##Key Files\n    53\tHere is a list of important project files and their roles:\n    54\t\n    55\t-MainActivity.kt: The main entry point of the application. It handles initial setup like language, theme, and launching the DeviceInspectorApp. It also manages the file-saving launcher.\n    56\t\n    57\t-di/AppModule.kt: The Hilt module that defines how to provide all project dependencies, especially DataSources and the Repository.\n...\n    74\t\n    75\t-DeviceInfoViewModel.kt: The main ViewModel for holding and managing general device data and live data.\n    76\t\n    77\t-NavigationViewModel.kt: Manages the current navigation state of the app and controls the back stack.\n    78\t\n    79\t-DashboardViewModel.kt: Manages the order and visibility of dashboard items.\n    80\t\n    81\t-SettingsViewModel.kt: Manages application settings like theme and language.\n    82\t\n    83\t-ui/screen/ (Package): Contains all full-screen composables, each constituting a screen in the application.\n    84\t\n    85\t-DashboardScreen.kt: The main screen that displays the different categories.\n    86\t\n    87\t-DetailScreen.kt: The screen for displaying the details of a specific category.\n    88\t\n    89\t-SensorDetailScreen.kt: A dedicated screen for displaying live data from a sensor.\n...\n   105\t\n   106\t-KavoshApp.kt: The Application class, annotated with @HiltAndroidApp to set up Hilt at the application level.\n   107\t\n   108\t-data/model/ (Package): Contains data classes that model the structure of information for different components (e.g., CpuInfo, BatteryInfo, etc.).\n   109\t\n   110\t-domain/sensor/ (Package): Contains the logic for sensor management, including SensorHandler for registering and receiving sensor data, and SensorState for modeling different sensor states.\n   111\t\n   112\t-ui/theme/ (Package): Contains files related to the application's theme in Jetpack Compose.\n   113\t\n   114\t-Theme.kt: Main theme definition, including color palettes for light, dark, and AMOLED modes.\n   115\t\n   116\t-Color.kt: Definition of base colors.\n   117\t\n   118\t-Type.kt: Definition of typography styles.\n...\nPath: app/src/main/java/ir/dekot/kavosh/KavoshApp.kt\n     1\tpackage ir.dekot.kavosh\n     2\t\n     3\timport android.app.Application\n     4\timport dagger.hilt.android.HiltAndroidApp\n     5\t\n     6\t/**\n     7\t * کلاس Application سفارشی برای راه‌اندازی Hilt.\n     8\t * انوتیشن @HiltAndroidApp باعث می‌شود Hilt کدهای مورد نیاز\n     9\t * برای تزریق وابستگی در سطح اپلیکیشن را تولید کند.\n    10\t */\n    11\t@HiltAndroidApp\n    12\tclass KavoshApp : Application() {\n    13\t    // در حال حاضر نیازی به کد اضافی در این کلاس نیست.\n    14\t}...\nPath: app/src/main/java/ir/dekot/kavosh/MainActivity.kt\n...\n    20\timport androidx.compose.ui.Modifier\n    21\timport androidx.compose.ui.platform.LocalLayoutDirection\n    22\timport androidx.compose.ui.unit.LayoutDirection\n    23\timport androidx.lifecycle.Lifecycle\n    24\timport androidx.lifecycle.lifecycleScope\n    25\timport androidx.lifecycle.repeatOnLifecycle\n    26\timport dagger.hilt.android.AndroidEntryPoint\n    27\timport ir.dekot.kavosh.data.model.settings.Theme\n    28\timport ir.dekot.kavosh.ui.screen.DeviceInspectorApp\n    29\timport ir.dekot.kavosh.ui.viewmodel.DeviceInfoViewModel\n    30\timport ir.dekot.kavosh.ui.viewmodel.SettingsViewModel // &lt;-- ایمپورت جدید\n    31\timport ir.dekot.kavosh.ui.theme.KavoshTheme // &lt;-- ایمپورت اصلاح شده\n    32\timport ir.dekot.kavosh.ui.viewmodel.DashboardViewModel\n    33\timport ir.dekot.kavosh.ui.viewmodel.ExportViewModel\n...\n    74\t\n    75\t    @RequiresApi(Build.VERSION_CODES.R)\n    76\t    override fun onCreate(savedInstanceState: Bundle?) {\n    77\t        super.onCreate(savedInstanceState)\n    78\t\n    79\t        // به رویدادهای ViewModel جدید گوش می‌دهیم\n    80\t        lifecycleScope.launch {\n    81\t            exportViewModel.exportRequest.collectLatest { format -&gt;\n    82\t                val fileName = \&quot;Kavosh_Report_${System.currentTimeMillis()}.${format.extension}\&quot;\n    83\t                createFileLauncher.launch(fileName)\n    84\t            }\n    85\t        }\n    86\t\n    87\t        lifecycleScope.launch {\n    88\t            // به رویداد تغییر زبان از ViewModel جدید گوش می‌دهیم\n    89\t            settingsViewModel.languageChangeRequest.collectLatest {\n    90\t                recreate()\n    91\t            }\n    92\t        }\n    93\t\n    94\t        lifecycleScope.launch {\n    95\t            lifecycle.repeatOnLifecycle(Lifecycle.State.STARTED) {\n    96\t                deviceInfoViewModel.loadDataForNonFirstLaunch(this@MainActivity)\n    97\t            }\n    98\t        }\n...\n   116\t\n   117\t            CompositionLocalProvider(LocalLayoutDirection provides layoutDirection) {\n   118\t                // تم را اینجا بر اساس داده‌های SettingsViewModel تنظیم می‌کنیم\n   119\t                KavoshTheme(\n   120\t                    darkTheme = useDarkTheme,\n   121\t                    dynamicColor = dynamicColor,\n   122\t                    theme = currentTheme\n   123\t                ) {\n   124\t                    Surface(\n   125\t                        modifier = Modifier.fillMaxSize(),\n   126\t                        color = MaterialTheme.colorScheme.background\n   127\t                    ) {\n   128\t                        DeviceInspectorApp(\n   129\t                            // هر دو ViewModel را به تابع اصلی پاس می‌دهیم\n   130\t                            deviceInfoViewModel = deviceInfoViewModel,\n   131\t                            settingsViewModel = settingsViewModel,\n   132\t                            dashboardViewModel = dashboardViewModel, // &lt;-- پاس دادن ViewModel جدید\n   133\t                            exportViewModel = exportViewModel, // &lt;-- پاس دادن ViewModel جدید\n   134\t                            navigationViewModel = navigationViewModel, // &lt;-- پاس دادن ViewModel جدید\n   135\t                            onStartScan = {\n   136\t                                deviceInfoViewModel.startScan(this) {\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/screen/DeviceInspectorScreen.kt\n...\n    18\timport ir.dekot.kavosh.ui.screen.sensordetail.SensorDetailScreen\n    19\timport ir.dekot.kavosh.ui.screen.settings.SettingsScreen\n    20\timport ir.dekot.kavosh.ui.screen.splash.SplashScreen\n    21\timport ir.dekot.kavosh.ui.screen.stresstest.CpuStressTestScreen\n    22\timport ir.dekot.kavosh.ui.viewmodel.*\n    23\t\n    24\t@SuppressLint(\&quot;NewApi\&quot;)\n    25\t@RequiresApi(Build.VERSION_CODES.R)\n    26\t@Composable\n    27\tfun DeviceInspectorApp(\n    28\t    deviceInfoViewModel: DeviceInfoViewModel,\n    29\t    settingsViewModel: SettingsViewModel,\n    30\t    dashboardViewModel: DashboardViewModel,\n    31\t    exportViewModel: ExportViewModel,\n    32\t    navigationViewModel: NavigationViewModel,\n    33\t    onStartScan: () -&gt; Unit\n    34\t) {\n    35\t    val currentScreen by navigationViewModel.currentScreen.collectAsState()\n    36\t\n    37\t    // ... (کد LaunchedEffect)\n    38\t\n    39\t    // **اصلاح ۱: حذف BackHandler از اینجا و انتقال به داخل case ها**\n    40\t\n    41\t    when (val screen = currentScreen) {\n    42\t        is Screen.Splash -&gt; SplashScreen(onStartScan = onStartScan, viewModel = deviceInfoViewModel)\n    43\t\n    44\t        is Screen.Dashboard -&gt; DashboardScreen(\n    45\t            settingsViewModel = settingsViewModel,\n    46\t            dashboardViewModel = dashboardViewModel,\n    47\t            exportViewModel = exportViewModel,\n    48\t            onCategoryClick = { category, _ -&gt; navigationViewModel.navigateToDetail(category) },\n    49\t            onSettingsClick = { navigationViewModel.navigateToSettings() },\n    50\t            onEditDashboardClick = { navigationViewModel.navigateToEditDashboard() }\n    51\t        )\n    52\t\n    53\t        is Screen.Settings -&gt; {\n    54\t            BackHandler { navigationViewModel.navigateBack() }\n    55\t            SettingsScreen(\n    56\t                viewModel = settingsViewModel,\n    57\t                onNavigateToAbout = { navigationViewModel.navigateToAbout() },\n    58\t                onBackClick = { navigationViewModel.navigateBack() }\n    59\t            )\n    60\t        }\n...\nPath: app/build.gradle.kts\n...\n    10\t\n    11\tandroid {\n    12\t    namespace = \&quot;ir.dekot.kavosh\&quot;\n    13\t    compileSdk = 36\n    14\t\n    15\t    defaultConfig {\n    16\t        applicationId = \&quot;ir.dekot.kavosh\&quot;\n    17\t        minSdk = 28\n    18\t        targetSdk = 35\n    19\t        versionCode = 1\n    20\t        versionName = \&quot;4.4.3beta\&quot;\n    21\t\n    22\t        testInstrumentationRunner = \&quot;androidx.test.runner.AndroidJUnitRunner\&quot;\n    23\t    }\n    24\t\n    25\t    buildTypes {\n    26\t        release {\n    27\t            // فعال‌سازی R8 برای کاهش حجم کد و مبهم‌سازی\n    28\t            isMinifyEnabled = true\n    29\t            // فعال‌سازی حذف منابع استفاده نشده\n    30\t            isShrinkResources = true\n    31\t            proguardFiles(\n    32\t                getDefaultProguardFile(\&quot;proguard-android-optimize.txt\&quot;),\n    33\t                \&quot;proguard-rules.pro\&quot;\n    34\t            )\n    35\t        }\n    36\t        setProperty(\&quot;archivesBaseName\&quot;, \&quot;kavosh-${defaultConfig.versionName}\&quot;)\n    37\t    }\n    38\t    compileOptions {\n    39\t        sourceCompatibility = JavaVersion.VERSION_11\n    40\t        targetCompatibility = JavaVersion.VERSION_11\n    41\t    }\n...\nPath: app/src/test/java/ir/dekot/kavosh/ExampleUnitTest.kt\n     1\tpackage ir.dekot.kavosh\n     2\t\n     3\timport org.junit.Test\n     4\t\n     5\timport org.junit.Assert.*\n     6\t\n     7\t/**\n     8\t * Example local unit test, which will execute on the development machine (host).\n     9\t *\n    10\t * See [testing documentation](http://d.android.com/tools/testing).\n    11\t */\n    12\tclass ExampleUnitTest {\n    13\t    @Test\n    14\t    fun addition_isCorrect() {\n    15\t        assertEquals(4, 2 + 2)\n    16\t    }\n    17\t}...\nPath: app/src/main/java/ir/dekot/kavosh/ui/viewmodel/DeviceInfoViewModel.kt\n...\n    83\t\n    84\t\n    85\t    init {\n    86\t        // **اصلاح کلیدی در init**\n    87\t        if (repository.isFirstLaunch()) {\n    88\t            hasLoadedData = false\n    89\t        } else {\n    90\t            // اگر اجرای اول نیست، سعی کن از کش بخونی\n    91\t            val cachedInfo = repository.getDeviceInfoCache()\n    92\t            if (cachedInfo != null) {\n    93\t                _deviceInfo.value = cachedInfo\n    94\t                hasLoadedData = true\n    95\t            }\n    96\t        }\n    97\t    }\n    98\t\n    99\t    override fun onCleared() {\n   100\t        super.onCleared()\n   101\t        stopAllPolling()\n   102\t        sensorHandler.stopListening()\n   103\t    }\n   104\t\n   105\t    /**\n   106\t     * این تابع تمام کارهای زمان‌بر (polling) را متوقف می‌کند.\n   107\t     * حالا از بیرون (توسط لایه UI) فراخوانی می‌شود.\n   108\t     */\n   109\t    fun stopAllPolling() {\n   110\t        socPollingJob?.cancel()\n   111\t        socPollingJob = null\n   112\t        networkPollingJob?.cancel()\n   113\t        networkPollingJob = null\n   114\t        unregisterBatteryReceiver()\n   115\t    }\n...\n   130\t\n   131\t    // --- توابع مربوط به اسکن و بارگذاری داده ---\n   132\t\n   133\t    fun loadDataForNonFirstLaunch(activity: Activity) {\n   134\t        // اگر کش داریم، این متد نباید دوباره اسکن کند\n   135\t        if (repository.isFirstLaunch() || hasLoadedData) return\n   136\t\n   137\t        viewModelScope.launch {\n   138\t            _isScanning.value = true\n   139\t            try {\n   140\t                _deviceInfo.value = fetchAllDeviceInfo(activity)\n   141\t                // **اصلاح کلیدی: ذخیره اطلاعات در کش**\n   142\t                repository.saveDeviceInfoCache(_deviceInfo.value)\n   143\t            } catch (e: Exception) {\n   144\t                e.printStackTrace()\n   145\t            } finally {\n   146\t                _isScanning.value = false\n   147\t                hasLoadedData = true\n   148\t            }\n   149\t        }\n   150\t    }\n...\n   161\t\n   162\t        val displayInfo = repository.getDisplayInfo(activity)\n   163\t        val thermalInfo = repository.getThermalInfo()\n   164\t        val networkInfo = repository.getNetworkInfo()\n   165\t\n   166\t        return DeviceInfo(\n   167\t            cpu = cpuInfoJob.await(),\n   168\t            gpu = gpuInfoJob.await(),\n   169\t            ram = ramInfoJob.await(),\n   170\t            storage = storageInfoJob.await(),\n   171\t            system = systemInfoJob.await(),\n   172\t            sensors = sensorInfoJob.await(),\n   173\t            cameras = cameraInfoJob.await(),\n   174\t            simCards = simInfoJob.await(), // &lt;-- افزودن نتیجه به مدل\n   175\t            display = displayInfo,\n   176\t            thermal = thermalInfo,\n   177\t            network = networkInfo\n   178\t        )\n   179\t    }\n   180\t\n   181\t    fun startScan(activity: Activity, onScanComplete: () -&gt; Unit) {\n   182\t        if (_isScanning.value) return\n   183\t\n   184\t        viewModelScope.launch {\n   185\t            _isScanning.value = true\n   186\t            _scanProgress.value = 0f\n   187\t\n   188\t            val animationJob = launch {\n   189\t                launch { for (i in 1..100) { delay(150); _scanProgress.value = i / 100f } }\n   190\t                _scanStatusText.value = \&quot;در حال خواندن مشخصات دستگاه...\&quot;\n   191\t                delay(5000)\n   192\t                _scanStatusText.value = \&quot;دریافت اطلاعات از درایور ها...\&quot;\n   193\t                delay(5000)\n   194\t                _scanStatusText.value = \&quot;ثبت اطلاعات...\&quot;\n   195\t            }\n   196\t\n   197\t            val dataLoadingJob = launch {\n   198\t                _deviceInfo.value = fetchAllDeviceInfo(activity)\n   199\t                // **اصلاح کلیدی: ذخیره اطلاعات در کش پس از اسکن موفق**\n   200\t                repository.saveDeviceInfoCache(_deviceInfo.value)\n   201\t            }\n   202\t\n   203\t            animationJob.join()\n   204\t            dataLoadingJob.join()\n   205\t            repository.setFirstLaunchCompleted()\n   206\t            hasLoadedData = true\n   207\t\n   208\t            onScanComplete() // به لایه ناوبری اطلاع می‌دهیم که اسکن تمام شد\n   209\t            _isScanning.value = false\n   210\t        }\n   211\t    }\n...\nPath: app/src/main/java/ir/dekot/kavosh/data/repository/DeviceInfoRepository.kt\n...\n    50\t\n    51\t    // دو متد زیر را اضافه کنید\n    52\t    fun saveLanguage(language: String) = settingsDataSource.saveLanguage(language)\n    53\t    fun getLanguage(): String = settingsDataSource.getLanguage()\n    54\t    fun isFirstLaunch(): Boolean = settingsDataSource.isFirstLaunch()\n    55\t    fun setFirstLaunchCompleted() = settingsDataSource.setFirstLaunchCompleted()\n    56\t    fun saveTheme(theme: Theme) = settingsDataSource.saveTheme(theme)\n    57\t    fun getTheme(): Theme = settingsDataSource.getTheme()\n    58\t    // متدهای جدید برای داشبورد\n    59\t    fun saveDashboardOrder(categories: List&lt;InfoCategory&gt;) = settingsDataSource.saveDashboardOrder(categories)\n    60\t    fun getDashboardOrder(): List&lt;InfoCategory&gt; = settingsDataSource.getDashboardOrder()\n    61\t    fun saveHiddenCategories(hidden: Set&lt;InfoCategory&gt;) = settingsDataSource.saveHiddenCategories(hidden)\n    62\t    fun getHiddenCategories(): Set&lt;InfoCategory&gt; = settingsDataSource.getHiddenCategories()\n    63\t    // متدهای جدید برای کنترل قابلیت جابجایی\n    64\t    fun setReorderingEnabled(enabled: Boolean) = settingsDataSource.setReorderingEnabled(enabled)\n    65\t    fun isReorderingEnabled(): Boolean = settingsDataSource.isReorderingEnabled()\n    66\t\n    67\t\n    68\t\n    69\t    // --- PowerDataSource ---\n    70\t    fun getThermalInfo(): List&lt;ThermalInfo&gt; = powerDataSource.getThermalInfo()\n    71\t    fun getBatteryInfo(intent: Intent): BatteryInfo = powerDataSource.getBatteryInfo(intent)\n    72\t    fun getInitialBatteryInfo(): BatteryInfo? = powerDataSource.getInitialBatteryInfo()\n    73\t\n    74\t    // --- SocDataSource ---\n    75\t    fun getCpuInfo(): CpuInfo = socDataSource.getCpuInfo()\n    76\t    fun getLiveCpuFrequencies(): List&lt;String&gt; = socDataSource.getLiveCpuFrequencies()\n    77\t    fun getGpuLoadPercentage(): Int? = socDataSource.getGpuLoadPercentage()\n    78\t    suspend fun getGpuInfo(activity: Activity): GpuInfo = socDataSource.getGpuInfo(activity)\n    79\t\n    80\t    // --- SystemDataSource ---\n    81\t    // امضای این دو متد را برای دریافت Activity تغییر می‌دهیم\n    82\t    @RequiresApi(30)\n    83\t    fun getDisplayInfo(activity: Activity): DisplayInfo = systemDataSource.getDisplayInfo(activity)\n    84\t    fun getSystemInfo(): SystemInfo = systemDataSource.getSystemInfo()\n    85\t    fun getSensorInfo(activity: Activity): List&lt;SensorInfo&gt; = systemDataSource.getSensorInfo(activity)\n...\n    95\t\n    96\t    // --- NetworkDataSource ---\n    97\t    fun getNetworkInfo(): NetworkInfo = networkDataSource.getNetworkInfo()\n    98\t\n    99\t    // --- CameraDataSource ---\n   100\t    fun getCameraInfoList(): List&lt;CameraInfo&gt; = cameraDataSource.getCameraInfoList()\n   101\t\n   102\t    // متدهای جدید برای کنترل تم پویا\n   103\t    fun setDynamicThemeEnabled(enabled: Boolean) = settingsDataSource.setDynamicThemeEnabled(enabled)\n   104\t    fun isDynamicThemeEnabled(): Boolean = settingsDataSource.isDynamicThemeEnabled()\n   105\t\n   106\t    // ... (سایر توابع SystemDataSource)\n   107\t    fun getAppVersion(): String = systemDataSource.getAppVersion()\n   108\t\n   109\t    // --- متدهای جدید برای کش ---\n   110\t    fun saveDeviceInfoCache(deviceInfo: DeviceInfo) = settingsDataSource.saveDeviceInfoCache(deviceInfo)\n   111\t    fun getDeviceInfoCache(): DeviceInfo? = settingsDataSource.getDeviceInfoCache()\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/navigation/Screen.kt\n     1\tpackage ir.dekot.kavosh.ui.navigation // &lt;-- تغییر پکیج\n     2\t\n     3\timport ir.dekot.kavosh.ui.viewmodel.InfoCategory\n     4\t\n     5\tsealed class Screen {\n     6\t    data object Splash : Screen()\n     7\t    data object Dashboard : Screen()\n     8\t    data object Settings : Screen()\n     9\t    data object EditDashboard : Screen()\n    10\t    data object About : Screen()\n    11\t    data class Detail(val category: InfoCategory) : Screen()\n    12\t    data class SensorDetail(val sensorType: Int) : Screen()\n    13\t\n    14\t    data object CpuStressTest : Screen() // &lt;-- صفحه جدید\n    15\t\n    16\t    data object NetworkTools : Screen() // &lt;-- صفحه جدید\n    17\t\n    18\t    data object DisplayTest : Screen() // &lt;-- صفحه جدید\n    19\t}...\nPath: app/src/main/java/ir/dekot/kavosh/ui/screen/networktools/NetworkToolsScreen.kt\n...\n    19\timport ir.dekot.kavosh.R\n    20\timport ir.dekot.kavosh.ui.viewmodel.NetworkToolsViewModel\n    21\t\n    22\t@OptIn(ExperimentalMaterial3Api::class, ExperimentalPermissionsApi::class)\n    23\t@Composable\n    24\tfun NetworkToolsScreen(\n    25\t    viewModel: NetworkToolsViewModel = hiltViewModel(),\n    26\t    onBackClick: () -&gt; Unit\n    27\t) {\n    28\t    var selectedTabIndex by remember { mutableStateOf(0) }\n    29\t    val tabs = listOf(\&quot;Wi-Fi Scanner\&quot;, \&quot;Ping Tool\&quot;)\n    30\t\n    31\t    Scaffold(\n    32\t        topBar = {\n    33\t            TopAppBar(\n    34\t                title = { Text(\&quot;Network Tools\&quot;) },\n    35\t                // **اصلاح: افزودن دکمه با...&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;69707dd0-fc2a-4500-a839-cf55fa34b5b6;toolu_01GVuvKqzaGMvTGwKycExYoe&quot;:{&quot;requestId&quot;:&quot;69707dd0-fc2a-4500-a839-cf55fa34b5b6&quot;,&quot;toolUseId&quot;:&quot;toolu_01GVuvKqzaGMvTGwKycExYoe&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on app/src/main/AndroidManifest.xml:\n     1\t&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n     2\t&lt;manifest xmlns:android=\&quot;http://schemas.android.com/apk/res/android\&quot;\n     3\t    xmlns:tools=\&quot;http://schemas.android.com/tools\&quot;&gt;\n     4\t\n     5\t    &lt;uses-feature\n     6\t        android:name=\&quot;android.hardware.camera\&quot;\n     7\t        android:required=\&quot;false\&quot; /&gt;\n     8\t\n     9\t    &lt;uses-permission android:name=\&quot;android.permission.ACCESS_NETWORK_STATE\&quot; /&gt;\n    10\t    &lt;uses-permission android:name=\&quot;android.permission.READ_PHONE_STATE\&quot; /&gt;\n    11\t    &lt;uses-permission android:name=\&quot;android.permission.CAMERA\&quot; /&gt;\n    12\t    &lt;uses-permission android:name=\&quot;android.permission.ACCESS_WIFI_STATE\&quot; /&gt;\n    13\t    &lt;uses-permission android:name=\&quot;android.permission.CHANGE_WIFI_STATE\&quot; /&gt;\n    14\t    &lt;uses-permission android:name=\&quot;android.permission.ACCESS_FINE_LOCATION\&quot; /&gt;\n    15\t    &lt;uses-permission android:name=\&quot;android.permission.ACCESS_COARSE_LOCATION\&quot; /&gt;\n    16\t    &lt;uses-permission android:name=\&quot;android.permission.INTERNET\&quot; /&gt;\n    17\t\n    18\t    &lt;application\n    19\t        android:name=\&quot;.KavoshApp\&quot;\n    20\t        android:allowBackup=\&quot;true\&quot;\n    21\t        android:dataExtractionRules=\&quot;@xml/data_extraction_rules\&quot;\n    22\t        android:fullBackupContent=\&quot;@xml/backup_rules\&quot;\n    23\t        android:icon=\&quot;@mipmap/ic_launcher\&quot;\n    24\t        android:label=\&quot;@string/app_name\&quot;\n    25\t        android:roundIcon=\&quot;@mipmap/ic_launcher_round\&quot;\n    26\t        android:supportsRtl=\&quot;true\&quot;\n    27\t        android:theme=\&quot;@style/Theme.Kavosh\&quot;\n    28\t        tools:targetApi=\&quot;31\&quot;&gt;\n    29\t        &lt;activity\n    30\t            android:name=\&quot;.MainActivity\&quot;\n    31\t            android:exported=\&quot;true\&quot;\n    32\t            android:theme=\&quot;@style/Theme.Kavosh\&quot;&gt;\n    33\t            &lt;intent-filter&gt;\n    34\t                &lt;action android:name=\&quot;android.intent.action.MAIN\&quot; /&gt;\n    35\t\n    36\t                &lt;category android:name=\&quot;android.intent.category.LAUNCHER\&quot; /&gt;\n    37\t            &lt;/intent-filter&gt;\n    38\t        &lt;/activity&gt;\n    39\t    &lt;/application&gt;\n    40\t\n    41\t&lt;/manifest&gt;\nTotal lines in file: 41\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;48b87b70-c6cd-4d68-9731-9059133b5e96;toolu_01J5sF6LdNsLpKXPbEoRN37W&quot;:{&quot;requestId&quot;:&quot;48b87b70-c6cd-4d68-9731-9059133b5e96&quot;,&quot;toolUseId&quot;:&quot;toolu_01J5sF6LdNsLpKXPbEoRN37W&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on CHANGELOG.md:\n     1\t# Changelog\n     2\t\n     3\tAll notable changes to this project will be documented in this file.\n     4\t\n     5\tThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\n     6\tand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n     7\t\n     8\t## [4.6.0] - 2025-07-03\n     9\t\n    10\t### Added\n    11\t- **Installed Applications Manager:** A new screen to list all user and system applications, showing details like version, installation date, and permissions.\n    12\t\n    13\t---\nTotal lines in file: 13\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;90f41837-ebf6-4815-aed4-2970d177b44b;toolu_015FSNdwXy52aBjy2o45U6RD&quot;:{&quot;requestId&quot;:&quot;90f41837-ebf6-4815-aed4-2970d177b44b&quot;,&quot;toolUseId&quot;:&quot;toolu_015FSNdwXy52aBjy2o45U6RD&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;The following code sections were retrieved:\nPath: GEMINI.md\n     1\t##Project Overview\n     2\tThe \&quot;Kavosh\&quot; project is an open-source Android application designed to display detailed hardware and software information about the user's device. The application allows users to access details about their CPU, GPU, RAM, battery status, sensors, camera, and network. It also provides testing tools such as a storage speed test, CPU stress test, and display test.\n     3\t\n     4\t##Architecture and Technologies:\n     5\t\n     6\t-Architecture: The project follows the MVVM (Model-View-ViewModel) architecture.\n     7\t\n     8\t-User Interface (UI): Built entirely with Jetpack Compose in a declarative style.\n     9\t\n    10\t-Dependency Injection (DI): Uses Hilt to manage dependencies throughout the application.\n...\n    49\t\n    50\tPermission Handling: The accompanist-permissions library is used for requesting permissions. The permission status should be checked, and the appropriate UI (permission request or information display) should be shown to the user.\n    51\t\n    52\t##Key Files\n    53\tHere is a list of important project files and their roles:\n    54\t\n    55\t-MainActivity.kt: The main entry point of the application. It handles initial setup like language, theme, and launching the DeviceInspectorApp. It also manages the file-saving launcher.\n    56\t\n    57\t-di/AppModule.kt: The Hilt module that defines how to provide all project dependencies, especially DataSources and the Repository.\n    58\t\n    59\t-data/repository/DeviceInfoRepository.kt: Acts as the Single Source of Truth. This class manages all calls to the various DataSources and provides the data needed by the ViewModels.\n    60\t\n    61\t-data/source/ (Package): Contains classes that directly interact with Android APIs to fetch hardware and software information.\n    62\t\n    63\t-SocDataSource.kt: CPU and GPU information.\n    64\t\n    65\t-PowerDataSource.kt: Battery and component temperature information.\n    66\t\n    67\t-MemoryDataSource.kt: RAM and internal storage information.\n    68\t\n    69\t-SystemDataSource.kt: Operating system, display, and sensor information.\n    70\t\n    71\t-NetworkDataSource.kt &amp; NetworkToolsDataSource.kt: Network information and related tools.\n    72\t\n    73\t-ui/viewmodel/ (Package): Contains all the ViewModels for the application.\n    74\t\n    75\t-DeviceInfoViewModel.kt: The main ViewModel for holding and managing general device data and live data.\n    76\t\n    77\t-NavigationViewModel.kt: Manages the current navigation state of the app and controls the back stack.\n    78\t\n    79\t-DashboardViewModel.kt: Manages the order and visibility of dashboard items.\n    80\t\n    81\t-SettingsViewModel.kt: Manages application settings like theme and language.\n    82\t\n    83\t-ui/screen/ (Package): Contains all full-screen composables, each constituting a screen in the application.\n    84\t\n    85\t-DashboardScreen.kt: The main screen that displays the different categories.\n    86\t\n    87\t-DetailScreen.kt: The screen for displaying the details of a specific category.\n    88\t\n    89\t-SensorDetailScreen.kt: A dedicated screen for displaying live data from a sensor.\n...\n   105\t\n   106\t-KavoshApp.kt: The Application class, annotated with @HiltAndroidApp to set up Hilt at the application level.\n   107\t\n   108\t-data/model/ (Package): Contains data classes that model the structure of information for different components (e.g., CpuInfo, BatteryInfo, etc.).\n   109\t\n   110\t-domain/sensor/ (Package): Contains the logic for sensor management, including SensorHandler for registering and receiving sensor data, and SensorState for modeling different sensor states.\n   111\t\n   112\t-ui/theme/ (Package): Contains files related to the application's theme in Jetpack Compose.\n   113\t\n   114\t-Theme.kt: Main theme definition, including color palettes for light, dark, and AMOLED modes.\n   115\t\n   116\t-Color.kt: Definition of base colors.\n   117\t\n   118\t-Type.kt: Definition of typography styles.\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/screen/DeviceInspectorScreen.kt\n...\n    18\timport ir.dekot.kavosh.ui.screen.sensordetail.SensorDetailScreen\n    19\timport ir.dekot.kavosh.ui.screen.settings.SettingsScreen\n    20\timport ir.dekot.kavosh.ui.screen.splash.SplashScreen\n    21\timport ir.dekot.kavosh.ui.screen.stresstest.CpuStressTestScreen\n    22\timport ir.dekot.kavosh.ui.viewmodel.*\n    23\t\n    24\t@SuppressLint(\&quot;NewApi\&quot;)\n    25\t@RequiresApi(Build.VERSION_CODES.R)\n    26\t@Composable\n    27\tfun DeviceInspectorApp(\n    28\t    deviceInfoViewModel: DeviceInfoViewModel,\n    29\t    settingsViewModel: SettingsViewModel,\n    30\t    dashboardViewModel: DashboardViewModel,\n    31\t    exportViewModel: ExportViewModel,\n    32\t    navigationViewModel: NavigationViewModel,\n    33\t    onStartScan: () -&gt; Unit\n    34\t) {\n    35\t    val currentScreen by navigationViewModel.currentScreen.collectAsState()\n    36\t\n    37\t    // ... (کد LaunchedEffect)\n    38\t\n    39\t    // **اصلاح ۱: حذف BackHandler از اینجا و انتقال به داخل case ها**\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/viewmodel/DeviceInfoViewModel.kt\n...\n   161\t\n   162\t        val displayInfo = repository.getDisplayInfo(activity)\n   163\t        val thermalInfo = repository.getThermalInfo()\n   164\t        val networkInfo = repository.getNetworkInfo()\n   165\t\n   166\t        return DeviceInfo(\n   167\t            cpu = cpuInfoJob.await(),\n   168\t            gpu = gpuInfoJob.await(),\n   169\t            ram = ramInfoJob.await(),\n   170\t            storage = storageInfoJob.await(),\n   171\t            system = systemInfoJob.await(),\n   172\t            sensors = sensorInfoJob.await(),\n   173\t            cameras = cameraInfoJob.await(),\n   174\t            simCards = simInfoJob.await(), // &lt;-- افزودن نتیجه به مدل\n   175\t            display = displayInfo,\n   176\t            thermal = thermalInfo,\n   177\t            network = networkInfo\n   178\t        )\n   179\t    }\n   180\t\n   181\t    fun startScan(activity: Activity, onScanComplete: () -&gt; Unit) {\n   182\t        if (_isScanning.value) return\n   183\t\n   184\t        viewModelScope.launch {\n   185\t            _isScanning.value = true\n   186\t            _scanProgress.value = 0f\n   187\t\n   188\t            val animationJob = launch {\n   189\t                launch { for (i in 1..100) { delay(150); _scanProgress.value = i / 100f } }\n   190\t                _scanStatusText.value = \&quot;در حال خواندن مشخصات دستگاه...\&quot;\n   191\t                delay(5000)\n   192\t                _scanStatusText.value = \&quot;دریافت اطلاعات از درایور ها...\&quot;\n   193\t                delay(5000)\n   194\t                _scanStatusText.value = \&quot;ثبت اطلاعات...\&quot;\n   195\t            }\n   196\t\n   197\t            val dataLoadingJob = launch {\n   198\t                _deviceInfo.value = fetchAllDeviceInfo(activity)\n   199\t                // **اصلاح کلیدی: ذخیره اطلاعات در کش پس از اسکن موفق**\n   200\t                repository.saveDeviceInfoCache(_deviceInfo.value)\n   201\t            }\n   202\t\n   203\t            animationJob.join()\n   204\t            dataLoadingJob.join()\n   205\t            repository.setFirstLaunchCompleted()\n   206\t            hasLoadedData = true\n   207\t\n   208\t            onScanComplete() // به لایه ناوبری اطلاع می‌دهیم که اسکن تمام شد\n   209\t            _isScanning.value = false\n   210\t        }\n   211\t    }\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/viewmodel/StorageViewModel.kt\n...\n    42\t\n    43\t        viewModelScope.launch(Dispatchers.IO) {\n    44\t            _isStorageTesting.value = true\n    45\t            _writeSpeed.value = context.getString(R.string.testing)\n    46\t            _readSpeed.value = context.getString(R.string.testing)\n    47\t            _storageTestProgress.value = 0f\n    48\t\n    49\t            try {\n    50\t                val result = repository.performStorageSpeedTest { progress -&gt;\n    51\t                    // به‌روزرسانی نوار پیشرفت باید در ترد اصلی انجام شود\n    52\t                    viewModelScope.launch(Dispatchers.Main) {\n    53\t                        _storageTestProgress.value = progress\n    54\t                    }\n    55\t                }\n    56\t                _writeSpeed.value = result.first\n    57\t                _readSpeed.value = result.second\n    58\t            } catch (e: Exception) {\n    59\t                e.printStackTrace()\n    60\t                _writeSpeed.value = context.getString(R.string.label_error)\n    61\t                _readSpeed.value = context.getString(R.string.label_error)\n    62\t            } finally {\n    63\t                _isStorageTesting.value = false\n    64\t                _storageTestProgress.value = 0f\n    65\t            }\n    66\t        }\n    67\t    }\n    68\t}...\nPath: app/src/main/java/ir/dekot/kavosh/MainActivity.kt\n...\n    20\timport androidx.compose.ui.Modifier\n    21\timport androidx.compose.ui.platform.LocalLayoutDirection\n    22\timport androidx.compose.ui.unit.LayoutDirection\n    23\timport androidx.lifecycle.Lifecycle\n    24\timport androidx.lifecycle.lifecycleScope\n    25\timport androidx.lifecycle.repeatOnLifecycle\n    26\timport dagger.hilt.android.AndroidEntryPoint\n    27\timport ir.dekot.kavosh.data.model.settings.Theme\n    28\timport ir.dekot.kavosh.ui.screen.DeviceInspectorApp\n    29\timport ir.dekot.kavosh.ui.viewmodel.DeviceInfoViewModel\n    30\timport ir.dekot.kavosh.ui.viewmodel.SettingsViewModel // &lt;-- ایمپورت جدید\n    31\timport ir.dekot.kavosh.ui.theme.KavoshTheme // &lt;-- ایمپورت اصلاح شده\n    32\timport ir.dekot.kavosh.ui.viewmodel.DashboardViewModel\n    33\timport ir.dekot.kavosh.ui.viewmodel.ExportViewModel\n...\nPath: app/src/main/java/ir/dekot/kavosh/data/repository/DeviceInfoRepository.kt\n...\n    32\timport kotlinx.coroutines.flow.Flow\n    33\timport javax.inject.Inject\n    34\timport javax.inject.Singleton\n    35\t\n    36\t@Singleton\n    37\tclass DeviceInfoRepository @Inject constructor(\n    38\t    private val powerDataSource: PowerDataSource,\n    39\t    private val socDataSource: SocDataSource,\n    40\t    private val systemDataSource: SystemDataSource,\n    41\t    private val memoryDataSource: MemoryDataSource,\n    42\t    private val settingsDataSource: SettingsDataSource,\n    43\t    private val networkDataSource: NetworkDataSource, // &lt;-- تزریق سورس جدید\n    44\t    private val cameraDataSource: CameraDataSource, // &lt;-- تزریق سورس جدید\n    45\t    private val networkToolsDataSource: NetworkToolsDataSource, // &lt;-- تزریق سورس جدید\n    46\t    private val simDataSource: SimDataSource // &lt;-- تزریق سورس جدید\n    47\t) {\n    48\t\n    49\t    // --- SettingsDataSource ---\n...\n    62\t    fun getHiddenCategories(): Set&lt;InfoCategory&gt; = settingsDataSource.getHiddenCategories()\n    63\t    // متدهای جدید برای کنترل قابلیت جابجایی\n    64\t    fun setReorderingEnabled(enabled: Boolean) = settingsDataSource.setReorderingEnabled(enabled)\n    65\t    fun isReorderingEnabled(): Boolean = settingsDataSource.isReorderingEnabled()\n    66\t\n    67\t\n    68\t\n    69\t    // --- PowerDataSource ---\n    70\t    fun getThermalInfo(): List&lt;ThermalInfo&gt; = powerDataSource.getThermalInfo()\n    71\t    fun getBatteryInfo(intent: Intent): BatteryInfo = powerDataSource.getBatteryInfo(intent)\n    72\t    fun getInitialBatteryInfo(): BatteryInfo? = powerDataSource.getInitialBatteryInfo()\n    73\t\n    74\t    // --- SocDataSource ---\n    75\t    fun getCpuInfo(): CpuInfo = socDataSource.getCpuInfo()\n    76\t    fun getLiveCpuFrequencies(): List&lt;String&gt; = socDataSource.getLiveCpuFrequencies()\n    77\t    fun getGpuLoadPercentage(): Int? = socDataSource.getGpuLoadPercentage()\n    78\t    suspend fun getGpuInfo(activity: Activity): GpuInfo = socDataSource.getGpuInfo(activity)\n    79\t\n    80\t    // --- SystemDataSource ---\n    81\t    // امضای این دو متد را برای دریافت Activity تغییر می‌دهیم\n    82\t    @RequiresApi(30)\n    83\t    fun getDisplayInfo(activity: Activity): DisplayInfo = systemDataSource.getDisplayInfo(activity)\n    84\t    fun getSystemInfo(): SystemInfo = systemDataSource.getSystemInfo()\n    85\t    fun getSensorInfo(activity: Activity): List&lt;SensorInfo&gt; = systemDataSource.getSensorInfo(activity)\n...\n    95\t\n    96\t    // --- NetworkDataSource ---\n    97\t    fun getNetworkInfo(): NetworkInfo = networkDataSource.getNetworkInfo()\n    98\t\n    99\t    // --- CameraDataSource ---\n   100\t    fun getCameraInfoList(): List&lt;CameraInfo&gt; = cameraDataSource.getCameraInfoList()\n   101\t\n   102\t    // متدهای جدید برای کنترل تم پویا\n   103\t    fun setDynamicThemeEnabled(enabled: Boolean) = settingsDataSource.setDynamicThemeEnabled(enabled)\n   104\t    fun isDynamicThemeEnabled(): Boolean = settingsDataSource.isDynamicThemeEnabled()\n   105\t\n   106\t    // ... (سایر توابع SystemDataSource)\n   107\t    fun getAppVersion(): String = systemDataSource.getAppVersion()\n   108\t\n   109\t    // --- متدهای جدید برای کش ---\n   110\t    fun saveDeviceInfoCache(deviceInfo: DeviceInfo) = settingsDataSource.saveDeviceInfoCache(deviceInfo)\n   111\t    fun getDeviceInfoCache(): DeviceInfo? = settingsDataSource.getDeviceInfoCache()\n...\nPath: app/src/main/java/ir/dekot/kavosh/di/AppModule.kt\n     1\tpackage ir.dekot.kavosh.di\n     2\t\n     3\timport android.content.Context\n     4\timport dagger.Module\n     5\timport dagger.Provides\n     6\timport dagger.hilt.InstallIn\n     7\timport dagger.hilt.android.qualifiers.ApplicationContext\n     8\timport dagger.hilt.components.SingletonComponent\n     9\timport ir.dekot.kavosh.data.repository.DeviceInfoRepository\n    10\timport ir.dekot.kavosh.data.source.*\n    11\timport ir.dekot.kavosh.domain.sensor.SensorHandler\n    12\timport javax.inject.Singleton\n    13\t\n    14\t@Module\n    15\t@InstallIn(SingletonComponent::class)\n    16\tobject AppModule {\n    17\t\n    18\t    @Provides\n    19\t    @Singleton\n    20\t    fun provideSimDataSource(@ApplicationContext context: Context): SimDataSource {\n    21\t        return SimDataSource(context)\n    22\t    }\n    23\t\n    24\t    /**\n    25\t     * این تابع به Hilt یاد می‌دهد که چگونه یک نمونه از DeviceInfoRepository بسازد.\n    26\t     * Hilt به صورت خودکار تمام پارامترهای این تابع (DataSourceها) را فراهم می‌کند.\n    27\t     */\n    28\t    @Provides\n    29\t    @Singleton\n    30\t    fun provideNetworkDataSource(@ApplicationContext context: Context): NetworkDataSource {\n    31\t        return NetworkDataSource(context)\n    32\t    }\n    33\t\n    34\t    // **اصلاح ۱: افزودن provider برای سورس جدید**\n    35\t    @Provides\n    36\t    @Singleton\n    37\t    fun provideNetworkToolsDataSource(@ApplicationContext context: Context): NetworkToolsDataSource {\n    38\t        return NetworkToolsDataSource(context)\n    39\t    }\n...\n    46\t\n    47\t    @Provides\n    48\t    @Singleton\n    49\t    fun provideDeviceInfoRepository(\n    50\t        powerDataSource: PowerDataSource,\n    51\t        socDataSource: SocDataSource,\n    52\t        systemDataSource: SystemDataSource,\n    53\t        memoryDataSource: MemoryDataSource,\n    54\t        settingsDataSource: SettingsDataSource,\n    55\t        networkDataSource: NetworkDataSource, // &lt;-- اضافه کردن به پارامترها\n    56\t        simDataSource: SimDataSource, // &lt;-- تزریق جدید\n    57\t        cameraDataSource: CameraDataSource, // &lt;-- اضافه کردن به پارامترها\n    58\t        // **اصلاح ۲: افزودن وابستگی جدید به پارامترها**\n    59\t        networkToolsDataSource: NetworkToolsDataSource\n    60\t    ): DeviceInfoRepository {\n    61\t        return DeviceInfoRepository(\n    62\t            powerDataSource,\n    63\t            socDataSource,\n    64\t            systemDataSource,\n    65\t            memoryDataSource,\n    66\t            settingsDataSource,\n    67\t            networkDataSource, // &lt;-- پاس دادن به constructor\n    68\t            cameraDataSource,// &lt;-- پاس دادن به constructor\n...\n    91\t\n    92\t    /**\n    93\t     * *** تغییر کلیدی: ***\n    94\t     * این تابع حالا Context را به عنوان ورودی می‌گیرد و به SystemDataSource پاس می‌دهد.\n    95\t     */\n    96\t    @Provides\n    97\t    @Singleton\n    98\t    fun provideSystemDataSource(@ApplicationContext context: Context): SystemDataSource {\n    99\t        return SystemDataSource(context)\n   100\t    }\n   101\t\n   102\t    // این تابع قبلا بدون پارامتر بود، حالا context را می‌گیرد\n   103\t    @Provides\n   104\t    @Singleton\n   105\t    fun provideMemoryDataSource(@ApplicationContext context: Context): MemoryDataSource {\n   106\t        return MemoryDataSource(context)\n   107\t    }\n   108\t\n   109\t\n   110\t    @Provides\n   111\t    @Singleton\n   112\t    fun provideSettingsDataSource(@ApplicationContext context: Context): SettingsDataSource {\n   113\t        return SettingsDataSource(context)\n   114\t    }\n...\nPath: app/src/main/java/ir/dekot/kavosh/ui/screen/dashboard/DashboardScreen.kt\n...\n    52\t\n    53\t@RequiresApi(Build.VERSION_CODES.R)\n    54\t@OptIn(ExperimentalMaterial3Api::class, ExperimentalFoundationApi::class)\n    55\t@Composable\n    56\tfun DashboardScreen(\n    57\t    settingsViewModel: SettingsViewModel,\n    58\t    dashboardViewModel: DashboardViewModel,\n    59\t    exportViewModel: ExportViewModel,\n    60\t    onCategoryClick: (InfoCategory, Context) -&gt; Unit,\n    61\t    onSettingsClick: () -&gt; Unit,\n    62\t    onEditDashboardClick: () -&gt; Unit\n    63\t) {\n    64\t    val snackbarHostState = remember { SnackbarHostState() }\n    65\t    val scope = rememberCoroutineScope()\n    66\t    val context = LocalContext.current\n    67\t\n    68\t    val dashboardItems by dashboardViewModel.dashboardItems.collectAsState()\n    69\t    val isReorderingEnabled by settingsViewModel.isReorderingEnabled.collectAsState()\n    70\t\n    71\t    val gridState = rememberLazyGridState()\n    72\t    val dragState = rememberDashboardDragState(\n    73\t        gridState = gridState,\n    74\t        onOrderChanged = { newOrder -&gt; dashboardViewModel.saveDashboardOrder(newOrder) }\n    75\t    )\n    76\t\n    77\t    LaunchedEffect(dashboardItems) {\n    78\t        dragState.updateItems(dashboardItems.filter { it.isVisible })\n    79\t    }\n    80\t\n    81\t    var showMenu by remember { mutableStateOf(false) }\n    82\t\n    83\t    LaunchedEffect(Unit) {\n    84\t        exportViewModel.exportResult.collectLatest { result -&gt;\n    85\t            val message = when (result) {\n    86\t                is ExportResult.Success -&gt; result.message\n    87\t                is ExportResult.Failure -&gt; result.message\n    88\t            }\n    89\t            scope.launch {\n    90\t                snackbarHostState.showSnackbar(message)\n    91\t            }\n    92\t        }\n    93\t    }\n...\n   134\t    ) { paddingValues -&gt;\n   135\t        LazyVerticalGrid(\n   136\t            state = gridState,\n   137\t            columns = GridCells.Fixed(3),\n   138\t            modifier = Modifier\n   139\t                .padding(paddingValues)\n   140\t                .padding(16.dp),\n   141\t            horizontalArrangement = Arrangement.spacedBy(16.dp),\n   142\t            verticalArrangement = Arrangement.spacedBy(16.dp)\n   143\t        ) {\n   144\t            items(dragState.localItems, key = { it.category.name }) { item -&gt;\n   145\t                val isDragging = dragState.draggedItemKey == item.category.name\n   146\t                val scale by animateFloatAsState(if (isDragging) 1.1f else 1f, label = \&quot;scale\&quot;)\n   147\t                val elevation by animateFloatAsState(if (isDragging) 12.dp.value else 1.dp.value, label = \&quot;elevation\&quot;)\n...\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;093f5d48-c6a0-4737-9134-b4a38f69469a;toolu_01N1RyBTs1fnDZV5ntjAzwjG&quot;:{&quot;requestId&quot;:&quot;093f5d48-c6a0-4737-9134-b4a38f69469a&quot;,&quot;toolUseId&quot;:&quot;toolu_01N1RyBTs1fnDZV5ntjAzwjG&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in app/src/main/res, excluding hidden items:\napp/src/main/res/drawable\napp/src/main/res/drawable\\ic_barometer.xml\napp/src/main/res/drawable\\ic_launcher_background.xml\napp/src/main/res/drawable\\ic_launcher_foreground.xml\napp/src/main/res/layout\napp/src/main/res/mipmap-anydpi\napp/src/main/res/mipmap-anydpi\\ic_launcher.xml\napp/src/main/res/mipmap-anydpi\\ic_launcher_round.xml\napp/src/main/res/mipmap-hdpi\napp/src/main/res/mipmap-hdpi\\ic_launcher.webp\napp/src/main/res/mipmap-hdpi\\ic_launcher_round.webp\napp/src/main/res/mipmap-mdpi\napp/src/main/res/mipmap-mdpi\\ic_launcher.webp\napp/src/main/res/mipmap-mdpi\\ic_launcher_round.webp\napp/src/main/res/mipmap-xhdpi\napp/src/main/res/mipmap-xhdpi\\ic_launcher.webp\napp/src/main/res/mipmap-xhdpi\\ic_launcher_round.webp\napp/src/main/res/mipmap-xxhdpi\napp/src/main/res/mipmap-xxhdpi\\ic_launcher.webp\napp/src/main/res/mipmap-xxhdpi\\ic_launcher_round.webp\napp/src/main/res/mipmap-xxxhdpi\napp/src/main/res/mipmap-xxxhdpi\\ic_launcher.webp\napp/src/main/res/mipmap-xxxhdpi\\ic_launcher_round.webp\napp/src/main/res/values\napp/src/main/res/values-fa\napp/src/main/res/values-fa\\strings.xml\napp/src/main/res/values\\colors.xml\napp/src/main/res/values\\strings.xml\napp/src/main/res/values\\themes.xml\napp/src/main/res/xml\napp/src/main/res/xml\\backup_rules.xml\napp/src/main/res/xml\\data_extraction_rules.xml\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;1dd39984-d457-4f8d-89d7-00100537ce5a;toolu_01YbP6kXiQvH3aTkbAAZmzSf&quot;:{&quot;requestId&quot;:&quot;1dd39984-d457-4f8d-89d7-00100537ce5a&quot;,&quot;toolUseId&quot;:&quot;toolu_01YbP6kXiQvH3aTkbAAZmzSf&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on app/src/main/res/values/strings.xml:\n     1\t&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;\n     2\t&lt;resources&gt;\n     3\t    &lt;string name=\&quot;app_name\&quot;&gt;Kavosh&lt;/string&gt;\n     4\t    &lt;string name=\&quot;settings\&quot;&gt;Settings&lt;/string&gt;\n     5\t    &lt;string name=\&quot;back\&quot;&gt;Back&lt;/string&gt;\n     6\t    &lt;string name=\&quot;choose_app_theme\&quot;&gt;Choose App Theme&lt;/string&gt;\n     7\t    &lt;string name=\&quot;system_default\&quot;&gt;System Default&lt;/string&gt;\n     8\t    &lt;string name=\&quot;light\&quot;&gt;Light&lt;/string&gt;\n     9\t    &lt;string name=\&quot;dark\&quot;&gt;Dark&lt;/string&gt;\n    10\t    &lt;string name=\&quot;dynamic_theme\&quot;&gt;Dynamic Theme&lt;/string&gt;\n    11\t    &lt;string name=\&quot;dashboard_settings\&quot;&gt;Dashboard Settings&lt;/string&gt;\n    12\t    &lt;string name=\&quot;enable_item_reordering\&quot;&gt;Enable Item Reordering&lt;/string&gt;\n    13\t    &lt;string name=\&quot;language_settings\&quot;&gt;Language&lt;/string&gt;\n    14\t    &lt;string name=\&quot;choose_language\&quot;&gt;Choose app language&lt;/string&gt;\n    15\t    &lt;string name=\&quot;persian\&quot;&gt;Persian&lt;/string&gt;\n    16\t    &lt;string name=\&quot;english\&quot;&gt;English&lt;/string&gt;\n    17\t    &lt;string name=\&quot;edit_dashboard_items\&quot;&gt;Show/Hide Items&lt;/string&gt;\n    18\t    &lt;string name=\&quot;scan_device\&quot;&gt;Scan Device&lt;/string&gt;\n    19\t    &lt;string name=\&quot;ready_to_scan\&quot;&gt;Ready to scan…&lt;/string&gt;\n    20\t    &lt;string name=\&quot;copy\&quot;&gt;Copy&lt;/string&gt;\n    21\t    &lt;string name=\&quot;share\&quot;&gt;Share&lt;/string&gt;\n    22\t    &lt;string name=\&quot;cancel\&quot;&gt;Cancel&lt;/string&gt;\n    23\t    &lt;string name=\&quot;copied_to_clipboard\&quot;&gt;Copied to clipboard&lt;/string&gt;\n    24\t    &lt;string name=\&quot;copy_selection_title\&quot;&gt;Select items to copy&lt;/string&gt;\n    25\t    &lt;string name=\&quot;copy_selection_button\&quot;&gt;Copy Selected&lt;/string&gt;\n    26\t    &lt;string name=\&quot;share_selection_title\&quot;&gt;Select items to share&lt;/string&gt;\n    27\t    &lt;string name=\&quot;share_selection_button\&quot;&gt;Share Selected&lt;/string&gt;\n    28\t    &lt;string name=\&quot;share_via\&quot;&gt;Share via…&lt;/string&gt;\n    29\t    &lt;string name=\&quot;full_report_title\&quot;&gt;Full Device Specification Report&lt;/string&gt;\n    30\t    &lt;string name=\&quot;file_exported_successfully\&quot;&gt;File saved successfully to your chosen path.&lt;/string&gt;\n    31\t    &lt;string name=\&quot;file_export_failed\&quot;&gt;Error creating file. Please try again.&lt;/string&gt;\n    32\t    &lt;string name=\&quot;category_soc\&quot;&gt;Hardware&lt;/string&gt;\n    33\t    &lt;string name=\&quot;category_device\&quot;&gt;Device&lt;/string&gt;\n    34\t    &lt;string name=\&quot;category_system\&quot;&gt;System&lt;/string&gt;\n    35\t    &lt;string name=\&quot;category_battery\&quot;&gt;Battery&lt;/string&gt;\n    36\t    &lt;string name=\&quot;category_sensors\&quot;&gt;Sensors&lt;/string&gt;\n    37\t    &lt;string name=\&quot;category_thermal\&quot;&gt;Thermal&lt;/string&gt;\n    38\t    &lt;string name=\&quot;category_network\&quot;&gt;Network&lt;/string&gt;\n    39\t    &lt;string name=\&quot;category_camera\&quot;&gt;Camera&lt;/string&gt;\n    40\t    &lt;string name=\&quot;label_undefined\&quot;&gt;Undefined&lt;/string&gt;\n    41\t    &lt;string name=\&quot;label_rooted\&quot;&gt;Rooted&lt;/string&gt;\n    42\t    &lt;string name=\&quot;label_not_rooted\&quot;&gt;Not Rooted&lt;/string&gt;\n    43\t    &lt;string name=\&quot;label_yes\&quot;&gt;Yes&lt;/string&gt;\n    44\t    &lt;string name=\&quot;label_no\&quot;&gt;No&lt;/string&gt;\n    45\t    &lt;string name=\&quot;label_on\&quot;&gt;On&lt;/string&gt;\n    46\t    &lt;string name=\&quot;label_off\&quot;&gt;Off&lt;/string&gt;\n    47\t    &lt;string name=\&quot;label_disconnected\&quot;&gt;Disconnected&lt;/string&gt;\n    48\t    &lt;string name=\&quot;label_not_available\&quot;&gt;N/A&lt;/string&gt;\n    49\t    &lt;string name=\&quot;label_permission_required\&quot;&gt;Permission Required&lt;/string&gt;\n    50\t    &lt;string name=\&quot;label_sleeping\&quot;&gt;Sleeping&lt;/string&gt;\nTotal lines in file: 222\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}}},&quot;draftExchange&quot;:{&quot;request_message&quot;:&quot;&quot;,&quot;rich_text_json_repr&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;}]},&quot;status&quot;:&quot;draft&quot;},&quot;requestIds&quot;:[],&quot;isPinned&quot;:false,&quot;isShareable&quot;:true,&quot;extraData&quot;:{&quot;isAgentConversation&quot;:true,&quot;hasAgentOnboarded&quot;:true,&quot;hasDirtyEdits&quot;:false},&quot;personaType&quot;:0,&quot;rootTaskUuid&quot;:&quot;ef75991a-b716-4943-85bf-6e26f2f66a33&quot;}},&quot;agentExecutionMode&quot;:&quot;manual&quot;,&quot;isPanelCollapsed&quot;:true,&quot;displayedAnnouncements&quot;:[]}" />
      </map>
    </option>
  </component>
</project>